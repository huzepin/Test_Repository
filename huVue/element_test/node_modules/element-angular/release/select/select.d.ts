import { OnInit, ElementRef, Renderer2, OnDestroy, OnChanges, SimpleChanges, AfterViewInit } from '@angular/core';
import { ElSelectPoprs } from './select-props';
import { ControlValueAccessor } from '@angular/forms';
import { WindowWrapper } from '../shared/services';
export declare type SelectOption = {
    label?: string | number;
    value: any;
};
export declare class ElSelect extends ElSelectPoprs implements OnInit, OnDestroy, OnChanges, AfterViewInit, ControlValueAccessor {
    private el;
    private renderer;
    private window;
    tags: any;
    input: any;
    selfWidth: string;
    subscriber: Function[];
    multipleLabels: Array<string | number>;
    multiplePlaceholder: string;
    dropdownActive: boolean;
    selectedLabel: string | number;
    iconClass: string;
    globalListener: Function;
    private selectOptions;
    constructor(el: ElementRef, renderer: Renderer2, window: WindowWrapper);
    mouseHandle(isEnter?: boolean): void;
    toggleHandle(event?: Event): void;
    clearSelected(event: Event): void;
    changeLabel(nextLabel: string | number, nextValue?: any): void;
    appendOptions(item: SelectOption): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    writeValue(value: any): void;
    registerOnChange(fn: Function): void;
    registerOnTouched(fn: Function): void;
    private controlChange;
    private controlTouch;
    private updateLayoutWithMultipleMode();
    private updateValueWithMultipleMode(nextLabel, nextValue?);
    private updatePlaceholderWithMultipleMode();
    private initModelWithMultipleMode();
}
