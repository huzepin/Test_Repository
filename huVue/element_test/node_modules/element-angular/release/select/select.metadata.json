[{"__symbolic":"module","version":3,"metadata":{"SelectOption":{"__symbolic":"interface"},"ElSelect":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./select-props","name":"ElSelectPoprs"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"el-select","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"ElSelect"},"multi":true}],"styles":["\n    .el-select-dropdown__list { overflow: hidden; }\n    .el-select__tags__padding { padding-right: 30px; }\n  "],"template":"\n    <div class=\"el-select\" (click)=\"toggleHandle($event)\">\n      <div class=\"el-select__tags el-select__tags__padding\" *ngIf=\"multiple && model && model.length\" #tags>\n        <el-tag *ngFor=\"let tag of multipleLabels; let i = index\"\n          [closable]=\"!elDisabled\"\n          [size]=\"size\"\n          (close)=\"$event.stopPropagation();changeLabel(tag, model[i])\"\n          type=\"info\">{{tag}}</el-tag>\n      </div>\n      \n      <el-input iconClass=\"el-select__caret\" #input\n        [model]=\"selectedLabel\"\n        [placeholder]=\"multiple ? multiplePlaceholder : placeholder\"\n        [icon]=\"iconClass\"\n        [name]=\"name\"\n        [size]=\"size\"\n        [elDisabled]=\"elDisabled\" [readonly]=\"true\"\n        (mouseenter)=\"mouseHandle(true)\" (mouseleave)=\"mouseHandle(false)\"\n        (icon-click)=\"clearSelected($event)\">\n      </el-input>\n      <ng-container>\n        <el-select-dropdown [isActived]=\"dropdownActive\">\n          <ul class=\"el-scrollbar__view el-select-dropdown__list\">\n            <ng-content></ng-content>\n          </ul>\n        </el-select-dropdown>\n      </ng-container>\n    </div>\n  "}]}],"members":{"tags":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["tags"]}]}],"input":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["input"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2"},{"__symbolic":"reference","module":"../shared/services","name":"WindowWrapper"}]}],"mouseHandle":[{"__symbolic":"method"}],"toggleHandle":[{"__symbolic":"method"}],"clearSelected":[{"__symbolic":"method"}],"changeLabel":[{"__symbolic":"method"}],"appendOptions":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"updateLayoutWithMultipleMode":[{"__symbolic":"method"}],"updateValueWithMultipleMode":[{"__symbolic":"method"}],"updatePlaceholderWithMultipleMode":[{"__symbolic":"method"}],"initModelWithMultipleMode":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"SelectOption":{"__symbolic":"interface"},"ElSelect":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./select-props","name":"ElSelectPoprs"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"el-select","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"ElSelect"},"multi":true}],"styles":["\n    .el-select-dropdown__list { overflow: hidden; }\n    .el-select__tags__padding { padding-right: 30px; }\n  "],"template":"\n    <div class=\"el-select\" (click)=\"toggleHandle($event)\">\n      <div class=\"el-select__tags el-select__tags__padding\" *ngIf=\"multiple && model && model.length\" #tags>\n        <el-tag *ngFor=\"let tag of multipleLabels; let i = index\"\n          [closable]=\"!elDisabled\"\n          [size]=\"size\"\n          (close)=\"$event.stopPropagation();changeLabel(tag, model[i])\"\n          type=\"info\">{{tag}}</el-tag>\n      </div>\n      \n      <el-input iconClass=\"el-select__caret\" #input\n        [model]=\"selectedLabel\"\n        [placeholder]=\"multiple ? multiplePlaceholder : placeholder\"\n        [icon]=\"iconClass\"\n        [name]=\"name\"\n        [size]=\"size\"\n        [elDisabled]=\"elDisabled\" [readonly]=\"true\"\n        (mouseenter)=\"mouseHandle(true)\" (mouseleave)=\"mouseHandle(false)\"\n        (icon-click)=\"clearSelected($event)\">\n      </el-input>\n      <ng-container>\n        <el-select-dropdown [isActived]=\"dropdownActive\">\n          <ul class=\"el-scrollbar__view el-select-dropdown__list\">\n            <ng-content></ng-content>\n          </ul>\n        </el-select-dropdown>\n      </ng-container>\n    </div>\n  "}]}],"members":{"tags":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["tags"]}]}],"input":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["input"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ElementRef"},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2"},{"__symbolic":"reference","module":"../shared/services","name":"WindowWrapper"}]}],"mouseHandle":[{"__symbolic":"method"}],"toggleHandle":[{"__symbolic":"method"}],"clearSelected":[{"__symbolic":"method"}],"changeLabel":[{"__symbolic":"method"}],"appendOptions":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"updateLayoutWithMultipleMode":[{"__symbolic":"method"}],"updateValueWithMultipleMode":[{"__symbolic":"method"}],"updatePlaceholderWithMultipleMode":[{"__symbolic":"method"}],"initModelWithMultipleMode":[{"__symbolic":"method"}]}}}}]