{"version":3,"sources":["../../src/row/row.directive.ts"],"names":[],"mappings":"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","file":"row.directive.js","sourceRoot":"","sourcesContent":["import { Input, Directive, ElementRef } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nexport class ElRowDirective {\n  \n   type: string\n   gutter: number = 0\n   justify: string = 'start'\n   align: string = 'top'\n  \n  nativeClass: string = ' '\n/**\n * @param {?} sanitizer\n * @param {?} el\n */\nconstructor(\nprivate sanitizer: DomSanitizer,\nprivate el: ElementRef,\n  ) {\n    this.nativeClass += this.el.nativeElement.classList.value\n  }\n/**\n * @return {?}\n */\njustifyClass(): string {\n    return this.justify !== 'start' ? ` is-justify-${this.justify}` : ''\n  }\n/**\n * @return {?}\n */\nalignClass(): string {\n    return this.align !== 'top' ? ` is-align-${this.align}` : ''\n  }\n/**\n * @return {?}\n */\ngutterStyle(): SafeStyle {\n    let /** @type {?} */ styleStr = ''\n    if (this.gutter) {\n      styleStr += `margin-left: -${this.gutter / 2}px;`\n      styleStr += `margin-right: -${this.gutter / 2}px;`\n    }\n    return this.sanitizer.bypassSecurityTrustStyle(styleStr)\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[el-row]',\n  host: {\n    '[class]': '\"el-row\" + justifyClass() + alignClass() + nativeClass',\n    '[class.el-row--flex]': 'type === \"flex\"',\n    '[style]': 'gutterStyle()',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomSanitizer, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'type': [{ type: Input },],\n'gutter': [{ type: Input },],\n'justify': [{ type: Input },],\n'align': [{ type: Input },],\n};\n}\n\nfunction ElRowDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nElRowDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElRowDirective.ctorParameters;\n/** @type {?} */\nElRowDirective.propDecorators;\n/** @type {?} */\nElRowDirective.prototype.type;\n/** @type {?} */\nElRowDirective.prototype.gutter;\n/** @type {?} */\nElRowDirective.prototype.justify;\n/** @type {?} */\nElRowDirective.prototype.align;\n/** @type {?} */\nElRowDirective.prototype.nativeClass;\n/** @type {?} */\nElRowDirective.prototype.sanitizer;\n/** @type {?} */\nElRowDirective.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}