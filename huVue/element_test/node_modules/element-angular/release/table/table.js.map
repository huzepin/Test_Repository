{"version":3,"sources":["../../src/table/table.ts"],"names":[],"mappings":"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","file":"table.js","sourceRoot":"","sourcesContent":["import {\n  Component, DoCheck, ElementRef, KeyValueDiffer, KeyValueDiffers, OnChanges, OnDestroy, OnInit, Renderer2,\n  SimpleChanges,\n  ViewChild,\n} from '@angular/core';\nimport { DocumentWrapper, WindowWrapper } from '../shared/services/index';\nimport { ModelWithIndexDataItem, OrderMap, TableColumn, TableColumnDataItem, WidthItem } from './table.interface';\nimport { ElTableProps } from './table.props';\nimport { ElTableFormat } from './utils/format';\nexport class ElTable extends ElTableProps implements OnInit, OnDestroy, OnChanges, DoCheck {\n  \n   headerRef: ElementRef\n  \n  columnsData: TableColumnDataItem[][]\n  columnsWithLevel: any[] = []\n  layout: any = {\n    headerHeight: 40,\n    bodyHeight: 'auto',\n    bodyWidth: 'auto',\n    scrollBarWidth: 0,\n  }\n  columnsWidth: WidthItem[] = []\nprivate columns: TableColumn[] = []\nprivate globalListenFunc: Function\nprivate orderMap: OrderMap\nprivate modelStorge: any\nprivate differ: KeyValueDiffer<any, any>\nprivate widthCount: number = 0\n/**\n * @return {?}\n */\nstatic GEN_TEMPLATE_KEY(): string {\n    return Math.random().toString(16).substr(2, 8)\n  }\n/**\n * @param {?} el\n * @param {?} renderer\n * @param {?} document\n * @param {?} window\n * @param {?} differs\n */\nconstructor(\nprivate el: ElementRef,\nprivate renderer: Renderer2,\nprivate document: DocumentWrapper,\nprivate window: WindowWrapper,\nprivate differs: KeyValueDiffers,\n  ) {\n    super()\n    this.differ = this.differs.find([]).create()\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nbodyScroll(event: Event): void {\n    if (!this.scrollX) return\n    const /** @type {?} */ el: Element = ( /** @type {?} */((<Element>event.target)))\n    if (el.scrollLeft === undefined) return\n    this.headerRef.nativeElement.scrollLeft = el.scrollLeft\n  }\n/**\n * @param {?} column\n * @return {?}\n */\nupdateColumns(column: TableColumn): void {\n    const /** @type {?} */ next: TableColumn = Object.assign(column, { index: this.columns.length })\n    this.columns.push(next)\n  }\n/**\n * @return {?}\n */\nupdateBodyHeight(): void {\n    const /** @type {?} */ height: number = ElTableFormat.getCSSValue(this.height)\n    const /** @type {?} */ header: HTMLElement = this.headerRef.nativeElement\n    if (!header || !height) return\n    \n    const /** @type {?} */ timer: any = setTimeout(() => {\n      const /** @type {?} */ headerHeight: number = header.offsetHeight\n      if (headerHeight) {\n        this.layout.headerHeight = headerHeight\n        this.layout.bodyHeight = height - this.layout.headerHeight\n        this.layout.scrollBarWidth = this.window.innerWidth - this.document.body.clientWidth\n      }\n      clearTimeout(timer)\n    }, 0)\n  }\n/**\n * @return {?}\n */\nupdateLayout(): void {\n    const /** @type {?} */ elTable: HTMLElement = this.el.nativeElement.children[0]\n    this.layout.bodyWidth = this.widthCount || elTable.clientWidth\n    if (this.widthCount) {\n      this.renderer.setStyle(elTable, 'width', `${this.widthCount}px`)\n    }\n  }\n/**\n * @param {?} widthItem\n * @return {?}\n */\nupdateColumnsWidth(widthItem: WidthItem): void {\n    this.columnsWidth.push(widthItem)\n  }\n/**\n * @param {?} columnsWidth\n * @return {?}\n */\ncomputeColumnsWidth(columnsWidth: WidthItem[]): WidthItem[] {\n    let /** @type {?} */ auto: number = 0, /** @type {?} */ count: number= 0\n    columnsWidth.forEach((item: WidthItem) => {\n      if (item.auto) return auto ++\n      if (Number.isNaN(item.width)) {         // cannot parse values\n        item.auto = true\n        return auto ++\n      }\n      count += item.width\n    })\n    // if user has set the width, use fixed width\n    // update layout\n    if (!auto) {\n      this.widthCount = count\n      this.updateLayout()\n    }\n    \n    const /** @type {?} */ average: number = (this.layout.bodyWidth - count) / auto\n    return columnsWidth.map((item: WidthItem) =>\n      item.auto ? Object.assign(item, { width: average }) : item)\n  }\n/**\n * @return {?}\n */\ntransformColumnsData(): void {\n    // order by deep\n    this.columns = this.columns.map((column: TableColumn) => {\n      if (!Array.isArray(this.columnsWithLevel[column.level])) {\n        this.columnsWithLevel[column.level] = []\n      }\n      this.columnsWithLevel[column.level].push(column)\n      if (column.deep === 0) return column\n      return null\n    }).filter(r => r)\n    this.columnsWithLevel.reverse()\n    this.columnsWidth = this.computeColumnsWidth(this.columnsWidth)\n  \n    // distribution template\n    this.columns = this.columns.map((column: TableColumn) => {\n      if (!column.slot) return column\n      const /** @type {?} */ TEMPLATE_KEY: string = ElTable.GEN_TEMPLATE_KEY()\n      this.modelStorge = this.model.map((v: any) => Object.assign(v, { [TEMPLATE_KEY]: column.slot }))\n      return Object.assign(column, { modelKey: TEMPLATE_KEY })\n    })\n    \n    this.orderMap = this.columns.reduce((pre, next: TableColumn) =>\n      Object.assign(pre, { [next.modelKey]: next }), {})\n    this.transformModelData()\n  }\n/**\n * @return {?}\n */\ntransformModelData(): void {\n    const /** @type {?} */ orderMap: OrderMap = this.orderMap\n    // add index, width, value\n    if (!this.modelStorge) {\n      this.modelStorge = this.model\n    }\n    const /** @type {?} */ modelWithIndex: ModelWithIndexDataItem[][] = this.modelStorge.map((row: any) =>\n      Object.keys({ ...row, ...orderMap }).map((v: string | number) => {\n        const /** @type {?} */ item: any = orderMap[v] || {}\n        return {\n          hidden: !item.width,\n          value: row[v], [v]: row[v],\n          index: ~~item.index,\n          width: item.width,\n          _renderHTML: item._renderHTML\n        }\n      })\n      .filter((r: any) => !!r)\n    )\n    // column sort\n    this.columnsData = modelWithIndex.map((row: TableColumnDataItem[]) =>\n      row.sort((pre, next) => pre.index - next.index))\n  \n    this.updateBodyHeight()\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.updateLayout()\n    this.updateBodyHeight()\n    this.globalListenFunc = this.renderer.listen('window', 'resize', () => {\n      this.updateLayout()\n      this.columnsWidth = this.computeColumnsWidth(this.columnsWidth)\n    })\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    // not include model\n    if (!changes || !changes.model) return\n    // first change\n    if (changes.model.isFirstChange()) return\n    this.model = changes.model.currentValue\n    this.transformModelData()\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    const /** @type {?} */ change = this.differ.diff(this.model)\n    if (!change || !this.orderMap) return\n  \n    // distribution template\n    this.modelStorge = this.model\n    const /** @type {?} */ nextColumns: TableColumn[] = this.columns.map((column: TableColumn) => {\n      if (!column.slot) return column\n      const /** @type {?} */ TEMPLATE_KEY: string = ElTable.GEN_TEMPLATE_KEY()\n      \n      this.modelStorge = this.model.map((v: any) => Object.assign(v, { [TEMPLATE_KEY]: column.slot }))\n      return Object.assign(column, { modelKey: TEMPLATE_KEY })\n    })\n    \n    this.orderMap = nextColumns.reduce((pre, next: TableColumn) =>\n      Object.assign(pre, { [next.modelKey]: next }), {})\n    this.transformModelData()\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this.globalListenFunc && this.globalListenFunc()\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-table',\n  styles: [`\n  .el-table__header-scroll::-webkit-scrollbar { visibility: hidden; }\n  `],\n  template: `\n    <div class=\"el-table\"\n      [ngStyle]=\"{ height: height | cssValue }\"\n      [class.el-table--enable-row-transition]=\"true\"\n      [class.el-table--striped]=\"stripe\"\n      [class.el-table--border]=\"border\"\n      [class.el-table--hidden]=\"false\">\n      <div class=\"hidden-columns\"><ng-content></ng-content></div>\n      <div class=\"el-table__header-wrapper el-table__header-scroll\" [hidden]=\"!showHeader\"\n        [ngStyle]=\"{'overflow-x': (scrollX ? 'auto' : 'hidden')}\" #headerRef>\n        <el-table-header [model]=\"columnsWithLevel\" [layout]=\"layout\" [columns-width]=\"columnsWidth\"\n          [border]=\"border\" [height]=\"height\" [center]=\"center === 'header' || center === 'all'\">\n        </el-table-header>\n      </div>\n      <div class=\"el-table__body-wrapper\" [ngStyle]=\"{ height: layout.bodyHeight | cssValue }\"\n        (scroll)=\"bodyScroll($event)\">\n        <el-table-body [model]=\"columnsData\" [stripe]=\"stripe\"\n          [layout]=\"layout\" [row-class-name]=\"rowClassName\"\n          [center]=\"center === 'all'\"\n          [ngStyle]=\"{ width: layout.bodyWidth + 'px' }\">\n        </el-table-body>\n        <div [ngStyle]=\"{width: layout.bodyWidth + 'px'}\" class=\"el-table__empty-block\" *ngIf=\"!model || model.length === 0\">\n          <span class=\"el-table__empty-text\">{{placeholder}}</span>\n        </div>\n      </div>\n    </div>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: DocumentWrapper, },\n{type: WindowWrapper, },\n{type: KeyValueDiffers, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'headerRef': [{ type: ViewChild, args: ['headerRef', ] },],\n};\n}\n\nfunction ElTable_tsickle_Closure_declarations() {\n/** @type {?} */\nElTable.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElTable.ctorParameters;\n/** @type {?} */\nElTable.propDecorators;\n/** @type {?} */\nElTable.prototype.headerRef;\n/** @type {?} */\nElTable.prototype.columnsData;\n/** @type {?} */\nElTable.prototype.columnsWithLevel;\n/** @type {?} */\nElTable.prototype.layout;\n/** @type {?} */\nElTable.prototype.columnsWidth;\n/** @type {?} */\nElTable.prototype.columns;\n/** @type {?} */\nElTable.prototype.globalListenFunc;\n/** @type {?} */\nElTable.prototype.orderMap;\n/** @type {?} */\nElTable.prototype.modelStorge;\n/** @type {?} */\nElTable.prototype.differ;\n/** @type {?} */\nElTable.prototype.widthCount;\n/** @type {?} */\nElTable.prototype.el;\n/** @type {?} */\nElTable.prototype.renderer;\n/** @type {?} */\nElTable.prototype.document;\n/** @type {?} */\nElTable.prototype.window;\n/** @type {?} */\nElTable.prototype.differs;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}