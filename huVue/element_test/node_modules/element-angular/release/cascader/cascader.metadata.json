[{"__symbolic":"module","version":3,"metadata":{"ElCascader":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./cascader-props","name":"ElCascaderPoprs"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"el-cascader","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"ElCascader"},"multi":true}],"template":"\n    <span [class]=\"'el-cascader ' +  (menuVisible ? 'is-opened ' : '') + (elDisabled ? 'is-disabled ' : '')\n      + (size ? 'el-cascader--' + size : '')\"\n      (click)=\"clickHandle($event)\"\n      (mouseenter)=\"inputHover = true\" (mouseleave)=\"inputHover = false\">\n      <el-input [readonly]=\"true\"\n        [placeholder]=\"currentLabels.length ? '' : placeholder\"\n        [size]=\"size\" [elDisabled]=\"elDisabled\"\n        [icon]=\"showClearIcon() ? 'circle-close' : 'caret-bottom'\"\n        [iconClass]=\"showClearIcon() ? 'el-cascader__clearIcon' : (menuVisible ? 'is-reverse' : '')\"\n        (icon-click)=\"clearValue($event)\">\n      </el-input>\n    \n      <span class=\"el-cascader__label\" *ngIf=\"currentLabels.length\">\n        <ng-container *ngIf=\"allLevels\">\n          <ng-container *ngFor=\"let item of currentLabels; let i = index\">\n            {{ item.label }}\n            <span *ngIf=\"i < currentLabels.length - 1\"> / </span>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!allLevels\">\n          {{ currentLabels[currentLabels.length - 1].label }}\n        </ng-container>\n      </span>\n      <el-cascader-menu></el-cascader-menu>\n  </span>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Renderer2"}]}],"close":[{"__symbolic":"method"}],"clickHandle":[{"__symbolic":"method"}],"changeLabels":[{"__symbolic":"method"}],"clearValue":[{"__symbolic":"method"}],"selectHandle":[{"__symbolic":"method"}],"showClearIcon":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"ElCascader":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"./cascader-props","name":"ElCascaderPoprs"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"el-cascader","providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR"},"useExisting":{"__symbolic":"reference","name":"ElCascader"},"multi":true}],"template":"\n    <span [class]=\"'el-cascader ' +  (menuVisible ? 'is-opened ' : '') + (elDisabled ? 'is-disabled ' : '')\n      + (size ? 'el-cascader--' + size : '')\"\n      (click)=\"clickHandle($event)\"\n      (mouseenter)=\"inputHover = true\" (mouseleave)=\"inputHover = false\">\n      <el-input [readonly]=\"true\"\n        [placeholder]=\"currentLabels.length ? '' : placeholder\"\n        [size]=\"size\" [elDisabled]=\"elDisabled\"\n        [icon]=\"showClearIcon() ? 'circle-close' : 'caret-bottom'\"\n        [iconClass]=\"showClearIcon() ? 'el-cascader__clearIcon' : (menuVisible ? 'is-reverse' : '')\"\n        (icon-click)=\"clearValue($event)\">\n      </el-input>\n    \n      <span class=\"el-cascader__label\" *ngIf=\"currentLabels.length\">\n        <ng-container *ngIf=\"allLevels\">\n          <ng-container *ngFor=\"let item of currentLabels; let i = index\">\n            {{ item.label }}\n            <span *ngIf=\"i < currentLabels.length - 1\"> / </span>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"!allLevels\">\n          {{ currentLabels[currentLabels.length - 1].label }}\n        </ng-container>\n      </span>\n      <el-cascader-menu></el-cascader-menu>\n  </span>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Renderer2"}]}],"close":[{"__symbolic":"method"}],"clickHandle":[{"__symbolic":"method"}],"changeLabels":[{"__symbolic":"method"}],"clearValue":[{"__symbolic":"method"}],"selectHandle":[{"__symbolic":"method"}],"showClearIcon":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}]}}}}]