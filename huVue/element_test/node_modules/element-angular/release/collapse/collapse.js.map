{"version":3,"sources":["../../src/collapse/collapse.ts"],"names":[],"mappings":"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","file":"collapse.js","sourceRoot":"","sourcesContent":["import { AfterViewInit, Component, EventEmitter, Input, Output } from '@angular/core';\nexport type ModelValue = string | number\nexport class ElCollapse implements AfterViewInit {\n  \n  modelValue: ModelValue[] = []\n  subscriber: Function[] = []\n   accordion: boolean = false\n/**\n * @param {?} val\n * @return {?}\n */\nset model(val: ModelValue[]) {\n    this.modelValue = val\n    this.updateSubscriber()\n  }\n   modelChange: EventEmitter<ModelValue[]> = new EventEmitter<ModelValue[]>()\n/**\n * @param {?} value\n * @return {?}\n */\nupdateModel(value: ModelValue): void {\n    const /** @type {?} */ index = this.modelValue.findIndex(val => val === value)\n    if (index < 0) {\n      this.accordion && (this.model = [])\n      this.modelValue.push(value)\n      this.updateSubscriber()\n      return this.modelChange.emit(this.modelValue)\n    }\n    \n    if (this.accordion) {\n      this.model = []\n    } else {\n      this.modelValue.splice(index, 1)\n    }\n    \n    this.updateSubscriber()\n    this.modelChange.emit(this.modelValue)\n  }\n/**\n * @return {?}\n */\nngAfterViewInit(): void {\n    const /** @type {?} */ timer: number = window.setTimeout(() => {\n      this.updateSubscriber()\n      window.clearTimeout(timer)\n    }, 0)\n  }\n/**\n * @return {?}\n */\nprivate updateSubscriber(): void {\n    this.subscriber.forEach(handle => handle())\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-collapse',\n  styles: [`.el-collapse-fix-border { border-bottom: 0; }`],\n  template: `\n    <div class=\"el-collapse el-collapse-fix-border\" role=\"tablist\" aria-multiselectable=\"true\">\n      <ng-content></ng-content>\n    </div>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'accordion': [{ type: Input },],\n'model': [{ type: Input },],\n'modelChange': [{ type: Output },],\n};\n}\n\nfunction ElCollapse_tsickle_Closure_declarations() {\n/** @type {?} */\nElCollapse.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElCollapse.ctorParameters;\n/** @type {?} */\nElCollapse.propDecorators;\n/** @type {?} */\nElCollapse.prototype.modelValue;\n/** @type {?} */\nElCollapse.prototype.subscriber;\n/** @type {?} */\nElCollapse.prototype.accordion;\n/** @type {?} */\nElCollapse.prototype.modelChange;\n}\n\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}