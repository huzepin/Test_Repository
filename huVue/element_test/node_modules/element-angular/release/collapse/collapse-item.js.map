{"version":3,"sources":["../../src/collapse/collapse-item.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,YAAA,EAAc,KAAA,EAAe,QAAA,EAAsB,MAAA,eAAA,CAAA;AACvE,OAAO,EAAE,UAAA,EAAuB,MAAA,YAAA,CAAA;AAChC,OAAO,EAAE,aAAA,EAAc,MAAA,2BAAA,CAAA;AACvB;IAMA;;OAEG;IACH,wBACa,IAAM;QAAN,SAAA,GAAA,IAAA,CAAM;QANhB,UAAK,GAEsB,IAAA,CAAA;QAD5B,aAAQ,GAEY,KAAA,CAAA;IAKpB,CAAC;IACH;;OAEG;IACH,2CAFG,GAEH;QAAA,iBAEG;QADC,IAAI,CAFC,QAAC,GAAU,IAAA,CAAK,IAAC,CAAI,UAAC,CAAU,IAAC,CAAI,UAAA,GAAC,IAAM,OAAA,GAAA,KAAQ,KAAA,CAAK,KAAC,EAAd,CAAc,CAAK,CAAA;IAGtE,CAAC;IACH;;OAEG;IACH,oCAJG,GAIH;QACI,EAAE,CAAC,CAAC,IAJC,CAAI,KAAC,KAAS,IAAA,CAAK,CAAC,CAAA;YAKvB,IAAI,CAJC,KAAC,GAAO,IAAA,CAAK,MAAC,EAAM,CAAE,QAAC,CAAQ,EAAC,CAAE,CAAC,MAAC,CAAM,CAAC,EAAE,CAAA,CAAE,CAAA;QAKtD,CAAC;QACD,IAAI,CAJC,IAAC,CAAI,WAAC,CAAW,IAAC,CAAI,KAAC,CAAK,CAAA;IAKnC,CAAC;IACH;;OAEG;IACH,iCANG,GAMH;QAAA,iBAGG;QAFC,IAAM,gBAAgB,CANhB,YAAA,GAAyB,cAAM,OAAA,KAAA,CAAK,kBAAC,EAAkB,EAAxB,CAAwB,CAAA;QAO7D,IAAI,CANC,IAAC,CAAI,UAAC,CAAU,IAAC,CAAI,YAAC,CAAY,CAAA;IAOzC,CAAC;IAJI,yBAAA,GAAoC;QAO3C,EANE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;oBAOvB,QAAQ,EANE,kBAAA;oBAOV,UAAU,EANE,CAAA,aAAE,CAAa;oBAO3B,MAAM,EANE,CAAA,+DAAE,CAA+D;oBAOzE,QAAQ,EANE,w1BAyBT;iBACF,EANC,EAAG;KAOJ,CANC;IAOF;;OAEG;IAPF,6BAAA,GAAA,cAAA,OAAA;QASD,EAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;KACrD,EAVA,CAUA,CAAC;IAPK,6BAAA,GAAyD;QAShE,UAAU,EARE,CAAA,EAAG,IAAA,EAAM,YAAA,EAAc,IAAA,EAAM,CAAA,OAAE,EAAO,EAAG,EAAE;QASvD,OAAO,EARE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAS1B,OAAO,EARE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;KASzB,CARC;IASF,qBAAC;CA1ED,AA0EC,IAAA;SAxEA,cAAA;AA0ED;IACA,gBAAgB;IAChB,cAAc,CAAC,UAAU,CAAC;IAC1B;;;OAGG;IACH,cAAc,CAAC,cAAc,CAAC;IAC9B,gBAAgB;IAChB,cAAc,CAAC,cAAc,CAAC;IAC9B,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC;IAClC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC;IAC/B,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC;IAC/B,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC;IAClC,gBAAgB;IAChB,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC;AAC9B,CAAC","file":"collapse-item.js","sourceRoot":"","sourcesContent":["import { Component, ContentChild, Input, OnInit, Optional, TemplateRef } from '@angular/core';\nimport { ElCollapse, ModelValue } from './collapse';\nimport { dropAnimation } from '../shared/animation/index';\nexport class ElCollapseItem implements OnInit {\n  \n   labelTmp: TemplateRef<any>\n   label: string\n   value: ModelValue | null = null\n  isActive: boolean = false\n/**\n * @param {?} root\n */\nconstructor(\nprivate root: ElCollapse,\n  ) {\n  }\n/**\n * @return {?}\n */\nupdateActiveStatus(): void {\n    this.isActive = this.root.modelValue.some(val => val === this.value)\n  }\n/**\n * @return {?}\n */\nclickHandle(): void {\n    if (this.value === null) {\n      this.value = Math.random().toString(16).substr(2, 8)\n    }\n    this.root.updateModel(this.value)\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    const /** @type {?} */ updateHandle: Function = () => this.updateActiveStatus()\n    this.root.subscriber.push(updateHandle)\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-collapse-item',\n  animations: [dropAnimation],\n  styles: [`.el-collapse-item-fix-border:last-child { margin-bottom: 0; }`],\n  template: `\n    <div class=\"el-collapse-item el-collapse-item-fix-border\" [class.is-active]=\"isActive\">\n      <div role=\"tab\" [attr.aria-expanded]=\"isActive\">\n        <div class=\"el-collapse-item__header\" (click)=\"clickHandle()\" role=\"button\">\n          <i class=\"el-collapse-item__arrow el-icon-arrow-right\"></i>\n          <ng-container *ngIf=\"labelTmp\">\n            <ng-template [ngTemplateOutlet]=\"labelTmp\">\n            </ng-template>\n          </ng-container>\n          <ng-container *ngIf=\"!labelTmp\">{{label}}</ng-container>\n        </div>\n      </div>\n      \n      <div class=\"el-collapse-item__wrap\" [ngStyle]=\"{'border-width': isActive ? '1px' : '0'}\">\n        <div class=\"el-collapse-item__content\" [@dropAnimation]=\"isActive\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElCollapse, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'labelTmp': [{ type: ContentChild, args: ['label', ] },],\n'label': [{ type: Input },],\n'value': [{ type: Input },],\n};\n}\n\nfunction ElCollapseItem_tsickle_Closure_declarations() {\n/** @type {?} */\nElCollapseItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElCollapseItem.ctorParameters;\n/** @type {?} */\nElCollapseItem.propDecorators;\n/** @type {?} */\nElCollapseItem.prototype.labelTmp;\n/** @type {?} */\nElCollapseItem.prototype.label;\n/** @type {?} */\nElCollapseItem.prototype.value;\n/** @type {?} */\nElCollapseItem.prototype.isActive;\n/** @type {?} */\nElCollapseItem.prototype.root;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}