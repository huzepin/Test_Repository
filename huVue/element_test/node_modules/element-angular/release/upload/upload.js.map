{"version":3,"sources":["../../src/upload/upload.ts"],"names":[],"mappings":"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","file":"upload.js","sourceRoot":"","sourcesContent":["import {\n  Component, ContentChild, ElementRef, OnInit, TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { HttpResponse } from '@angular/common/http';\nimport { ElUploadProps } from './upload.props';\nimport { ElUploadRequest } from './upload.request';\nimport { CommonFile, UploadFile } from './upload.interface';\nexport class ElUpload extends ElUploadProps implements OnInit {\n  \n   trigger: TemplateRef<any>\n   dragger: TemplateRef<any>\n   tip: TemplateRef<any>\n   input: ElementRef\n  \n  files: CommonFile[] = []\n/**\n * @return {?}\n */\nstatic generateID(): string {\n    return Math.random().toString(16).substr(2, 8)\n  }\n/**\n * @param {?} response\n * @return {?}\n */\nstatic updatePercentage(response: any): number {\n    const { loaded, total } = response\n    if (loaded === undefined || !total) return 0\n    return Math.round(loaded / total * 100)\n  }\n/**\n * @param {?} request\n * @param {?} sanitizer\n */\nconstructor(\nprivate request: ElUploadRequest,\nprivate sanitizer: DomSanitizer,\n  ) {\n    super()\n  }\n/**\n * @return {?}\n */\nclickHandle(): void {\n    if (this.elDisabled) return\n    this.input.nativeElement.click()\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nchangeHandle(event: Event): void {\n    const /** @type {?} */ files: FileList = ( /** @type {?} */((<HTMLInputElement>event.target))).files\n    if (!files || !files.length) return\n    const /** @type {?} */ checkedFiles: File[] = this.multiple ? Array.from(files) : [files[0]]\n    this.input.nativeElement.value = null\n    checkedFiles.forEach((file: File) => {\n      const /** @type {?} */ next = {\n        id: ElUpload.generateID(),\n        name: file.name,\n        status: 'ready',\n        size: file.size,\n        percentage: 0,\n        raw: file,\n        url: this.sanitizer.bypassSecurityTrustUrl(URL.createObjectURL(file))\n      }\n      this.files.push(next)\n      this.updateFile(next)\n      this.uploadFilter(file) === false ? this.removeHandle(next) : this.upload(next)\n    })\n  }\n/**\n * @param {?} file\n * @return {?}\n */\nupload(file: CommonFile): void {\n    file.status = 'uploading'\n    this.updateFile(file)\n    this.request.upload(this.action, file.raw)\n      .subscribe((event: any) => {\n        file.percentage = ElUpload.updatePercentage(event)\n        file.percentage && this.lifecycle.progress(file, file.percentage)\n        if (event instanceof HttpResponse) {\n          this.lifecycle.success(Object.assign(file, { status: 'success' }), event)\n        }\n        this.updateFile(file)\n      }, err => {\n        file.status = 'fail'\n        this.lifecycle.error(file, err)\n        this.removeHandle(file)\n      })\n  }\n/**\n * @param {?} file\n * @return {?}\n */\nremoveHandle(file: CommonFile): void {\n    this.lifecycle.remove(file)\n    const /** @type {?} */ index = this.files.findIndex(({ id }) => file.id === id)\n    this.files.splice(index, 1)\n  }\n/**\n * @param {?} file\n * @return {?}\n */\nupdateFile(file: CommonFile): void {\n    const /** @type {?} */ index = this.files.findIndex(({ id }) => file.id === id)\n    if (!index) return\n    this.files[index] = file\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.request\n      .setHeader(this.headers)\n      .setCredentials(this.withCredentials)\n      .setFileName(this.name)\n      .addExtraData(this.data)\n    this.fileList.forEach((file: UploadFile) => {\n      this.files.push({\n        id: ElUpload.generateID(),\n        name: file.name,\n        status: 'success',\n        raw: null, size: null,\n        url: this.sanitizer.bypassSecurityTrustUrl(file.url),\n      })\n    })\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-upload',\n  template: `\n    <ng-template #uploadList>\n      <el-upload-list [files]=\"files\"  *ngIf=\"showFileList\"\n        [list-type]=\"listType\" [elDisabled]=\"elDisabled\"\n        (remove)=\"removeHandle($event)\" (preview)=\"lifecycle.preview($event)\">\n      </el-upload-list>\n    </ng-template>\n    \n    <ng-template #triggerBlock>\n      <div [class]=\"'el-upload el-upload--' + listType\" (click)=\"clickHandle()\">\n        <el-button *ngIf=\"!trigger\" size=\"small\" type=\"primary\">点击上传</el-button>\n        <ng-container *ngIf=\"trigger\">\n          <ng-template [ngTemplateOutlet]=\"trigger\"></ng-template>\n        </ng-container>\n        <input class=\"el-upload__input\" type=\"file\" name=\"file\" #input\n          [accept]=\"accept\" [name]=\"name\" [multiple]=\"multiple\"\n          (change)=\"changeHandle($event)\">\n      </div>\n    </ng-template>\n    \n    <el-upload-dragger *ngIf=\"drag\" [elDisabled]=\"elDisabled\" (change)=\"changeHandle($event)\">\n      <ng-template [ngTemplateOutlet]=\"triggerBlock\"></ng-template>\n    </el-upload-dragger>\n    \n    <ng-container *ngIf=\"listType === 'picture-card'\">\n      <ng-template [ngTemplateOutlet]=\"uploadList\"></ng-template>\n    </ng-container>\n    <ng-container *ngIf=\"!drag\">\n      <ng-template [ngTemplateOutlet]=\"triggerBlock\"></ng-template>\n    </ng-container>\n    \n    <ng-container *ngIf=\"tip\">\n      <ng-template [ngTemplateOutlet]=\"tip\"></ng-template>\n    </ng-container>\n    <ng-container *ngIf=\"listType !== 'picture-card'\">\n      <ng-template [ngTemplateOutlet]=\"uploadList\"></ng-template>\n    </ng-container>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElUploadRequest, },\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trigger': [{ type: ContentChild, args: ['trigger', ] },],\n'dragger': [{ type: ContentChild, args: ['dragger', ] },],\n'tip': [{ type: ContentChild, args: ['tip', ] },],\n'input': [{ type: ViewChild, args: ['input', ] },],\n};\n}\n\nfunction ElUpload_tsickle_Closure_declarations() {\n/** @type {?} */\nElUpload.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElUpload.ctorParameters;\n/** @type {?} */\nElUpload.propDecorators;\n/** @type {?} */\nElUpload.prototype.trigger;\n/** @type {?} */\nElUpload.prototype.dragger;\n/** @type {?} */\nElUpload.prototype.tip;\n/** @type {?} */\nElUpload.prototype.input;\n/** @type {?} */\nElUpload.prototype.files;\n/** @type {?} */\nElUpload.prototype.request;\n/** @type {?} */\nElUpload.prototype.sanitizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}