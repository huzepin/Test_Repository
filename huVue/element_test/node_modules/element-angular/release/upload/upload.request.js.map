{"version":3,"sources":["../../src/upload/upload.request.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAY,WAAA,EAAa,WAAA,EAAY,MAAA,sBAAA,CAAA;AAC9C,OAAO,EAAE,UAAA,EAAW,MAAA,eAAA,CAAA;AAEpB;IAMA;;OAEG;IACH,yBACY,IAAM;QAAN,SAAA,GAAA,IAAA,CAAM;IAEhB,CAAC;IACH;;;;OAIG;IACH,gCAJG,GAIH,UAJG,IAAA,EAAA,IAAA;QAKC,IAAM,gBAAgB,CAJhB,GAAA,GAAuB,IAAI,WAAA,CAAY,MAAC,EAAO,IAAA,EAAM,IAAA,EAAM;YAK/D,OAAO,EAJE,IAAA,CAAK,OAAC;YAKf,cAAc,EAJE,IAAA;YAKhB,eAAe,EAJE,IAAA,CAAK,eAAC;SAKxB,CAJC,CAAA;QAKF,MAAM,CAJC,IAAA,CAAK,IAAC,CAAI,OAAC,CAAO,GAAC,CAAG,CAAA;IAK/B,CAAC;IACH;;;OAGG;IACH,mCAPG,GAOH,UAPG,OAAA;QAAA,wBAAA,EAAA,YAAA;QAQC,IAAI,CAPC,OAAC,GAAS,IAAI,WAAA,CAAY,OAAC,CAAO,CAAA;QAQvC,MAAM,CAPC,IAAA,CAAA;IAQT,CAAC;IACH;;;OAGG;IACH,wCAVG,GAUH,UAVG,eAAA;QAWC,IAAI,CAVC,eAAC,GAAiB,eAAA,CAAA;QAWvB,MAAM,CAVC,IAAA,CAAA;IAWT,CAAC;IACH;;;OAGG;IACH,qCAbG,GAaH,UAbG,IAAA;QAcC,IAAI,CAbC,QAAC,GAAU,IAAA,CAAA;QAchB,MAAM,CAbC,IAAA,CAAA;IAcT,CAAC;IACH;;;OAGG;IACH,sCAhBG,GAgBH,UAhBG,IAAA;QAAA,qBAAA,EAAA,SAAA;QAiBC,IAAI,CAhBC,WAAC,GAAa,IAAA,CAAA;QAiBnB,MAAM,CAhBC,IAAA,CAAA;IAiBT,CAAC;IAdI,0BAAA,GAAoC;QAiB3C,EAhBE,IAAA,EAAM,UAAA,EAAW;KAiBlB,CAhBC;IAiBF;;OAEG;IAjBF,8BAAA,GAAA,cAAA,OAAA;QAmBD,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EApBA,CAoBA,CAAC;IACF,sBAAC;CApED,AAoEC,IAAA;SAlEA,eAAA;AAoED;IACA,gBAAgB;IAChB,eAAe,CAAC,UAAU,CAAC;IAC3B;;;OAGG;IACH,eAAe,CAAC,cAAc,CAAC;IAC/B,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,OAAO,CAAC;IAClC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,eAAe,CAAC;IAC1C,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;IACnC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC;IACtC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC;AAC/B,CAAC","file":"upload.request.js","sourceRoot":"","sourcesContent":["import { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nexport class ElUploadRequest {\n  \n  headers: HttpHeaders\n  withCredentials: boolean\n  fileName: string\n  defaultBody: any\n/**\n * @param {?} http\n */\nconstructor(\nprivate http: HttpClient,\n  ) {\n  }\n/**\n * @param {?} path\n * @param {?} file\n * @return {?}\n */\nupload(path: string, file: File): Observable<any> {\n    const /** @type {?} */ req: HttpRequest<{}> = new HttpRequest('POST', path, file, {\n      headers: this.headers,\n      reportProgress: true,\n      withCredentials: this.withCredentials,\n    })\n    return this.http.request(req)\n  }\n/**\n * @param {?=} headers\n * @return {?}\n */\nsetHeader(headers: any = {}): ElUploadRequest {\n    this.headers = new HttpHeaders(headers)\n    return this\n  }\n/**\n * @param {?} withCredentials\n * @return {?}\n */\nsetCredentials(withCredentials: boolean): ElUploadRequest {\n    this.withCredentials = withCredentials\n    return this\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nsetFileName(name: string): ElUploadRequest {\n    this.fileName = name\n    return this\n  }\n/**\n * @param {?=} data\n * @return {?}\n */\naddExtraData(data: any = {}): ElUploadRequest {\n    this.defaultBody = data\n    return this\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: HttpClient, },\n];\n}\n\nfunction ElUploadRequest_tsickle_Closure_declarations() {\n/** @type {?} */\nElUploadRequest.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElUploadRequest.ctorParameters;\n/** @type {?} */\nElUploadRequest.prototype.headers;\n/** @type {?} */\nElUploadRequest.prototype.withCredentials;\n/** @type {?} */\nElUploadRequest.prototype.fileName;\n/** @type {?} */\nElUploadRequest.prototype.defaultBody;\n/** @type {?} */\nElUploadRequest.prototype.http;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}