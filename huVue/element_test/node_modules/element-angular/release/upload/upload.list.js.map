{"version":3,"sources":["../../src/upload/upload.list.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,YAAA,EAAc,KAAA,EAAO,MAAA,EAAO,MAAA,eAAA,CAAA;AAEhD;IAAA;QAEG,UAAK,GAEiB,EAAA,CAAA;QADtB,eAAU,GAEY,KAAA,CAAA;QAAtB,WAAM,GAE6B,IAAI,YAAA,EAAwB,CAAA;QAD/D,YAAO,GAE6B,IAAI,YAAA,EAAwB,CAAA;IA4EnE,CAAC;IA7ED;;;OAGG;IACH,kCADG,GACH,UADG,IAAA;IAGD,CAAC;IACH;;;OAGG;IACH,mCAJG,GAIH,UAJG,IAAA;QAKC,IAAI,CAJC,MAAC,CAAM,IAAC,CAAI,IAAC,CAAI,CAAA;IAKxB,CAAC;IACH;;;OAGG;IACH,oCANG,GAMH,UANG,IAAA;QAOC,IAAI,CANC,OAAC,CAAO,IAAC,CAAI,IAAC,CAAI,CAAA;IAOzB,CAAC;IAJI,uBAAA,GAAoC;QAO3C,EANE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;oBAOvB,QAAQ,EANE,gBAAA;oBAOV,QAAQ,EANE,wuDA2CT;iBACF,EANC,EAAG;KAOJ,CANC;IAOF;;OAEG;IAPF,2BAAA,GAAA,cAAA,OAAA,EASA,EATA,CASA,CAbC;IAMK,2BAAA,GAAyD;QAShE,OAAO,EARE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAS1B,YAAY,EARE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAS/B,UAAU,EARE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,WAAE,EAAW,EAAG,EAAE;QASpD,QAAQ,EARE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;QAS5B,SAAS,EARE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;KAS5B,CARC;IASF,mBAAC;CApFD,AAoFC,IAAA;SAlFA,YAAA;AAoFD;IACA,gBAAgB;IAChB,YAAY,CAAC,UAAU,CAAC;IACxB;;;OAGG;IACH,YAAY,CAAC,cAAc,CAAC;IAC5B,gBAAgB;IAChB,YAAY,CAAC,cAAc,CAAC;IAC5B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC;IAC7B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC;IAClC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC;IAChC,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC;IAC9B,gBAAgB;IAChB,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC;AAC/B,CAAC","file":"upload.list.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonFile } from './upload.interface';\nexport class ElUploadList {\n  \n   files: CommonFile[] = []\n   elDisabled: boolean = false\n   listType: string\n   remove: EventEmitter<CommonFile> = new EventEmitter<CommonFile>()\n   preview: EventEmitter<CommonFile> = new EventEmitter<CommonFile>()\n/**\n * @param {?} file\n * @return {?}\n */\nclickHandle(file: CommonFile): void {\n  \n  }\n/**\n * @param {?} file\n * @return {?}\n */\nremoveHandle(file: CommonFile): void {\n    this.remove.emit(file)\n  }\n/**\n * @param {?} file\n * @return {?}\n */\npreviewHandle(file: CommonFile): void {\n    this.preview.emit(file)\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-upload-list',\n  template: `\n    <ul [class]=\"'el-upload-list el-upload-list--' + listType\"\n      [class.is-disabled]=\"elDisabled\">\n      <li *ngFor=\"let file of files; let i = index\"\n        [class]=\"'el-upload-list__item is-' + file.status\">\n        <img class=\"el-upload-list__item-thumbnail\"\n          *ngIf=\"file.status !== 'uploading' && ['picture-card', 'picture'].indexOf(listType) > -1\"\n          [src]=\"file.url\">\n        <a class=\"el-upload-list__item-name\" (click)=\"clickHandle(file)\">\n          <i class=\"el-icon-document\"></i>\n          {{file.name}}\n        </a>\n        <label class=\"el-upload-list__item-status-label\">\n          <i [class.el-icon-check]=\"['picture-card', 'picture'].indexOf(listType) > -1\"\n            [class.el-icon-circle-check]=\"listType === 'text'\"\n            [class.el-icon-upload-success]=\"true\"></i>\n        </label>\n        <i class=\"el-icon-close\" *ngIf=\"!elDisabled\" (click)=\"removeHandle(file)\"></i>\n        <el-progress *ngIf=\"file.status === 'uploading'\"\n          [type]=\"listType === 'picture-card' ? 'circle' : 'line'\"\n          [stroke-width]=\"listType === 'picture-card' ? 6 : 2\"\n          [percentage]=\"file.percentage\">\n        </el-progress>\n        <span class=\"el-upload-list__item-actions\" *ngIf=\"listType === 'picture-card'\">\n        <span class=\"el-upload-list__item-preview\"\n          *ngIf=\"listType === 'picture-card'\"\n          (click)=\"previewHandle(file)\">\n          <i class=\"el-icon-view\"></i>\n        </span>\n        <span class=\"el-upload-list__item-delete\"\n          *ngIf=\"!elDisabled\"\n          (click)=\"removeHandle(file)\">\n          <i class=\"el-icon-delete2\"></i>\n        </span>\n      </span>\n      </li>\n    </ul>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'files': [{ type: Input },],\n'elDisabled': [{ type: Input },],\n'listType': [{ type: Input, args: ['list-type', ] },],\n'remove': [{ type: Output },],\n'preview': [{ type: Output },],\n};\n}\n\nfunction ElUploadList_tsickle_Closure_declarations() {\n/** @type {?} */\nElUploadList.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElUploadList.ctorParameters;\n/** @type {?} */\nElUploadList.propDecorators;\n/** @type {?} */\nElUploadList.prototype.files;\n/** @type {?} */\nElUploadList.prototype.elDisabled;\n/** @type {?} */\nElUploadList.prototype.listType;\n/** @type {?} */\nElUploadList.prototype.remove;\n/** @type {?} */\nElUploadList.prototype.preview;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}