{"version":3,"sources":["../../src/message/message.service.ts"],"names":[],"mappings":"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","file":"message.service.js","sourceRoot":"","sourcesContent":["import { ComponentRef, Injectable, Optional } from '@angular/core';\nimport { ElMessageContainer } from './message';\nimport { ExDynamicService } from '../shared/services/index';\n\nexport interface Options {\n  type?: string\n  iconClass?: string\n  customClass?: string\n  duration?: number\n  showClose?: boolean\n  center?: boolean\n  zIndex?: number\n  onClose?: Function\n}\nexport class ElMessageService {\n  \n  components: any[] = []\n/**\n * @param {?} root\n * @param {?} dynamic\n */\nconstructor(\nprivate root: ElMessageContainer,\nprivate dynamic: ExDynamicService\n  ) {\n    this.createComponent()\n  }\n/**\n * @param {?} msg\n * @return {?}\n */\nshow(msg: string): void {\n    if (this.components.length === 0 || this.components[this.components.length - 1].init) {\n      this.createComponent()\n    }\n    // mark the component\n    const /** @type {?} */ current = this.components[this.components.length - 1]\n    current.init = true\n  \n    current.instance.onDestroy = () => {\n      // component detach and destroy\n      this.dynamic.destroy(current.copy)\n      // remove empty item\n      const /** @type {?} */ index = this.components.findIndex(com => com.id === current.id)\n      this.components.splice(index, 1)\n    }\n    const /** @type {?} */ timer = setTimeout(() => {\n      current.instance.show(msg)\n      clearTimeout(timer)\n    }, 0)\n  }\n/**\n * @param {?} msg\n * @return {?}\n */\nsuccess(msg: string): void {\n    this.setOptions({ type: 'success' })\n    this.show(msg)\n  }\n/**\n * @param {?} msg\n * @return {?}\n */\nwarning(msg: string): void {\n    this.setOptions({ type: 'warning' })\n    this.show(msg)\n  }\n/**\n * @param {?} msg\n * @return {?}\n */\ninfo(msg: string): void {\n    this.setOptions({ type: 'info' })\n    this.show(msg)\n  }\n/**\n * @param {?} msg\n * @return {?}\n */\nerror(msg: string): void {\n    this.setOptions({ type: 'error' })\n    this.show(msg)\n  }\n/**\n * @param {?} options\n * @return {?}\n */\nsetOptions(options: Options): void {\n    if (this.components.length === 0 || this.components[this.components.length - 1].init) {\n      this.createComponent()\n    }\n    const /** @type {?} */ last = this.components[this.components.length - 1]\n    last.instance = Object.assign(last.instance, options)\n  }\n/**\n * @return {?}\n */\ncreateComponent(): void {\n    const /** @type {?} */ com: ComponentRef<any> = this.dynamic.generator(ElMessageContainer)\n    this.components.push({\n      instance: com.instance,\n      id: com.instance.id,\n      copy: com,\n      init: false\n    })\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElMessageContainer, decorators: [{ type: Optional }, ]},\n{type: ExDynamicService, },\n];\n}\n\nfunction ElMessageService_tsickle_Closure_declarations() {\n/** @type {?} */\nElMessageService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElMessageService.ctorParameters;\n/** @type {?} */\nElMessageService.prototype.components;\n/** @type {?} */\nElMessageService.prototype.root;\n/** @type {?} */\nElMessageService.prototype.dynamic;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}