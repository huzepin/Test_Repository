{"version":3,"sources":["../../src/message/message.ts"],"names":[],"mappings":"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","file":"message.js","sourceRoot":"","sourcesContent":["import { Component } from '@angular/core';\nimport { SafeUrl, DomSanitizer } from '@angular/platform-browser';\nimport * as Icons from './images';\nimport { MessageAnimation } from './message.animation';\nexport class ElMessageContainer {\n  \n  // element id, for destroy com\n  id: string\n  \n  showClose: boolean = false\n  type: string = 'info'\n  center: boolean = false\n  duration: number = 3000\n  // user setting\n  iconClass: string = ''\n  customClass: string = ''\n  zIndex: number = 1000\n  \n  message: string = ''\n  showBox: boolean = false\n  timer: any\n  \n  onClose: Function = () => {}\n  onDestroy: Function = () => {}\n/**\n * @param {?} sanitizer\n */\nconstructor(\nprivate sanitizer: DomSanitizer,\n  ) {\n  }\n/**\n * @return {?}\n */\nmakeTypeClass(): string {\n    return this.type && !this.iconClass ? `el-message__icon el-icon-${this.type}` : ''\n  }\n/**\n * @return {?}\n */\nmakeLink(): SafeUrl {\n    return this.sanitizer.bypassSecurityTrustUrl(Icons[this.type])\n  }\n/**\n * @param {?} message\n * @return {?}\n */\nshow(message: string): void {\n    this.message = message\n    this.showBox = true\n    this.timer = setTimeout(() => {\n      this.close()\n    }, this.duration)\n  }\n/**\n * @return {?}\n */\nclose(): void {\n    this.timer && clearTimeout(this.timer)\n    this.showBox = false\n    this.onClose()\n    this.onDestroy()\n  }\n/**\n * @return {?}\n */\nstartTimer(): void {\n    if (!this.showBox) return\n    this.timer = setTimeout(() => {\n      this.close()\n    }, this.duration)\n  }\n/**\n * @return {?}\n */\nclearTimer(): void {\n    this.timer && clearTimeout(this.timer)\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-message-container',\n  styles: [``],\n  template: `\n    <div [class]=\"'el-message ' + customClass + (type && !iconClass ? ' el-message--' + type : '')\"\n      [class.is-center]=\"center\"\n      style=\"visibility: hidden; transition: all .25s\" role=\"alertdialog\"\n      [ngStyle]=\"{ 'z-index': zIndex }\"\n      (mouseenter)=\"clearTimer()\" (mouseleave)=\"startTimer()\"\n      [@messageAnimation]=\"showBox\">\n      <i [class]=\"iconClass\" *ngIf=\"iconClass\"></i>\n      <i [class]=\"makeTypeClass()\" *ngIf=\"!iconClass\"></i>\n      \n      <p class=\"el-message__content\" tabindex=\"0\">{{ message }}</p>\n      <div *ngIf=\"showClose\" class=\"el-message__closeBtn el-icon-close\" (click)=\"close()\" role=\"button\"></div>\n    </div>\n  `,\n  animations: [MessageAnimation]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomSanitizer, },\n];\n}\n\nfunction ElMessageContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nElMessageContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElMessageContainer.ctorParameters;\n/** @type {?} */\nElMessageContainer.prototype.id;\n/** @type {?} */\nElMessageContainer.prototype.showClose;\n/** @type {?} */\nElMessageContainer.prototype.type;\n/** @type {?} */\nElMessageContainer.prototype.center;\n/** @type {?} */\nElMessageContainer.prototype.duration;\n/** @type {?} */\nElMessageContainer.prototype.iconClass;\n/** @type {?} */\nElMessageContainer.prototype.customClass;\n/** @type {?} */\nElMessageContainer.prototype.zIndex;\n/** @type {?} */\nElMessageContainer.prototype.message;\n/** @type {?} */\nElMessageContainer.prototype.showBox;\n/** @type {?} */\nElMessageContainer.prototype.timer;\n/** @type {?} */\nElMessageContainer.prototype.onClose;\n/** @type {?} */\nElMessageContainer.prototype.onDestroy;\n/** @type {?} */\nElMessageContainer.prototype.sanitizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}