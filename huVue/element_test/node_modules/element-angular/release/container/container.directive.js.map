{"version":3,"sources":["../../src/container/container.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAA0B,IAAA,EAAK,MAAA,eAAA,CAAA;AACnD,OAAO,EAAE,OAAA,EAAQ,MAAA,iBAAA,CAAA;AACjB;IAIA;;OAEG;IACH,8BACa,OAAS;QAAT,YAAA,GAAA,OAAA,CAAS;QANnB,cAAS,GAEW,EAAA,CAAA;IAMrB,CAAC;IACH;;OAEG;IACH,0CAFG,GAEH;QACI,IAAI,CAFC,aAAC,EAAa,CAAA;IAGrB,CAAC;IACH;;OAEG;IACH,uCAJG,GAIH;QACI,IAAI,CAJC,aAAC,EAAa,CAAA;IAKrB,CAAC;IACH;;OAEG;IALA,4CAAA,GAMH;QACI,IAAI,CANC,WAAC,GAAa;YAOjB,cAAc,EANE,IAAA;YAOhB,aAAa,EANE,IAAA,CAAK,SAAC,KAAa,UAAA;SAOnC,CAAA;QAED,IAAI,CANC,OAAC,CAAO,OAAC,GAAS,IAAA,CAAK,WAAC,CAAA;QAO7B,IAAI,CANC,OAAC,CAAO,SAAC,EAAS,CAAA;IAOzB,CAAC;IAJI,+BAAA,GAAoC;QAO3C,EANE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;oBAOvB,QAAQ,EANE,gBAAA;oBAOV,SAAS,EANE,CAAA,OAAE,CAAO;iBAOrB,EANC,EAAG;KAOJ,CANC;IAOF;;OAEG;IAPF,mCAAA,GAAA,cAAA,OAAA;QASD,EAAC,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAG,EAAC;KAC9C,EAVA,CAUA,CAAC;IAPK,mCAAA,GAAyD;QAShE,WAAW,EARE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;KAS7B,CARC;IASF,2BAAC;CAnDD,AAmDC,IAAA;SAjDA,oBAAA;AAmDD;IACA,gBAAgB;IAChB,oBAAoB,CAAC,UAAU,CAAC;IAChC;;;OAGG;IACH,oBAAoB,CAAC,cAAc,CAAC;IACpC,gBAAgB;IAChB,oBAAoB,CAAC,cAAc,CAAC;IACpC,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,SAAS,CAAC;IACzC,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,WAAW,CAAC;IAC3C,gBAAgB;IAChB,oBAAoB,CAAC,SAAS,CAAC,OAAO,CAAC;AACvC,CAAC","file":"container.directive.js","sourceRoot":"","sourcesContent":["import { Directive, Input, OnChanges, OnInit, Self } from '@angular/core';\nimport { NgClass } from '@angular/common';\nexport class ElContainerDirective implements OnChanges, OnInit {\n  \n   direction: string = ''\nprivate hostClasses: { [key: string]: boolean }\n/**\n * @param {?} ngClass\n */\nconstructor(\nprivate ngClass: NgClass,\n  ) {\n  }\n/**\n * @return {?}\n */\nngOnChanges(): void {\n    this.colletClasses()\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.colletClasses()\n  }\n/**\n * @return {?}\n */\nprivate colletClasses(): void {\n    this.hostClasses = {\n      'el-container': true,\n      'is-vertical': this.direction === 'vertical',\n    }\n  \n    this.ngClass.ngClass = this.hostClasses\n    this.ngClass.ngDoCheck()\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[el-container]',\n  providers: [NgClass],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgClass, decorators: [{ type: Self }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'direction': [{ type: Input },],\n};\n}\n\nfunction ElContainerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nElContainerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElContainerDirective.ctorParameters;\n/** @type {?} */\nElContainerDirective.propDecorators;\n/** @type {?} */\nElContainerDirective.prototype.direction;\n/** @type {?} */\nElContainerDirective.prototype.hostClasses;\n/** @type {?} */\nElContainerDirective.prototype.ngClass;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}