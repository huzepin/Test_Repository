{"version":3,"sources":["../../../src/container/children/aside.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAY,KAAA,EAAc,MAAA,eAAA,CAAA;AAC9C,OAAO,EAAE,WAAA,EAAY,MAAA,0BAAA,CAAA;AACrB;IAIA;;OAEG;IACH,iBACY,EAAI;QAAJ,OAAA,GAAA,EAAA,CAAI;QANb,UAAK,GAEW,OAAA,CAAA;IAMjB,CAAC;IACH;;OAEG;IACH,0BAFG,GAEH;QACI,OAAO,CAFC,GAAC,CAAG,0FAAC,CAA0F,CAAA;QAGvG,WAAW,CAFC,IAAC,CAAI,EAAC,CAAE,aAAC,CAAa,CAAA;IAGpC,CAAC;IADI,kBAAA,GAAoC;QAG3C,EAFE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;oBAGvB,QAAQ,EAFE,UAAA;oBAGV,QAAQ,EAFE,+HAMT;iBACF,EAFC,EAAG;KAGJ,CAFC;IAGF;;OAEG;IAHF,sBAAA,GAAA,cAAA,OAAA;QAKD,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EANA,CAMA,CAAC;IAHK,sBAAA,GAAyD;QAKhE,OAAO,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAK1B,OAAO,EAJE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;KAKzB,CAJC;IAKF,cAAC;CAtCD,AAsCC,IAAA;SApCA,OAAA;AAsCD;IACA,gBAAgB;IAChB,OAAO,CAAC,UAAU,CAAC;IACnB;;;OAGG;IACH,OAAO,CAAC,cAAc,CAAC;IACvB,gBAAgB;IAChB,OAAO,CAAC,cAAc,CAAC;IACvB,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;IACxB,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC;IACxB,gBAAgB;IAChB,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;AACrB,CAAC","file":"aside.js","sourceRoot":"","sourcesContent":["import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { removeNgTag } from '../../shared/utils/index';\nexport class ElAside implements OnInit {\n  \n   width: string = '300px'\n   class: string\n/**\n * @param {?} el\n */\nconstructor(\nprivate el: ElementRef,\n  ) {\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    console.log('Element Angular: Container Component is discarded, use [Container directive] replace it.')\n    removeNgTag(this.el.nativeElement)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-aside',\n  template: `\n    <aside [class]=\"'el-aside ' + class\" [ngStyle]=\"{width: width}\">\n      <ng-content></ng-content>\n    </aside>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'width': [{ type: Input },],\n'class': [{ type: Input },],\n};\n}\n\nfunction ElAside_tsickle_Closure_declarations() {\n/** @type {?} */\nElAside.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElAside.ctorParameters;\n/** @type {?} */\nElAside.propDecorators;\n/** @type {?} */\nElAside.prototype.width;\n/** @type {?} */\nElAside.prototype.class;\n/** @type {?} */\nElAside.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}