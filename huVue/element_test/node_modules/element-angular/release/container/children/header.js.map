{"version":3,"sources":["../../../src/container/children/header.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAY,KAAA,EAAc,MAAA,eAAA,CAAA;AAC9C,OAAO,EAAE,WAAA,EAAY,MAAA,cAAA,CAAA;AACrB,OAAO,EAAE,WAAA,EAAY,MAAA,yBAAA,CAAA;AACrB;IAIA;;;OAGG;IACH,kBAAY,IAAM,EACN,EAAI;QADJ,SAAA,GAAA,IAAA,CAAM;QACN,OAAA,GAAA,EAAA,CAAI;QAPb,WAAM,GAEW,MAAA,CAAA;IAQlB,CAAC;IACH;;OAEG;IACH,2BAHG,GAGH;QACI,OAAO,CAHC,GAAC,CAAG,0FAAC,CAA0F,CAAA;QAIvG,IAAI,CAHC,IAAC,CAAI,WAAC,CAAW,IAAC,CAAI,CAAA;QAI3B,WAAW,CAHC,IAAC,CAAI,EAAC,CAAE,aAAC,CAAa,CAAA;IAIpC,CAAC;IAFI,mBAAA,GAAoC;QAI3C,EAHE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;oBAIvB,QAAQ,EAHE,WAAA;oBAIV,QAAQ,EAHE,oIAOT;iBACF,EAHC,EAAG;KAIJ,CAHC;IAIF;;OAEG;IAJF,uBAAA,GAAA,cAAA,OAAA;QAMD,EAAC,IAAI,EAAE,WAAW,GAAG;QACrB,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EARA,CAQA,CAZC;IAQK,uBAAA,GAAyD;QAMhE,QAAQ,EALE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAM3B,OAAO,EALE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;KAMzB,CALC;IAMF,eAAC;CA1CD,AA0CC,IAAA;SAxCA,QAAA;AA0CD;IACA,gBAAgB;IAChB,QAAQ,CAAC,UAAU,CAAC;IACpB;;;OAGG;IACH,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC;IAC1B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;IACzB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;AACtB,CAAC","file":"header.js","sourceRoot":"","sourcesContent":["import { Component, ElementRef, Input, OnInit } from '@angular/core';\nimport { ElContainer } from '../container';\nimport { removeNgTag } from '../../shared/utils/host';\nexport class ElHeader implements OnInit {\n  \n   height: string = '60px'\n   class: string\n/**\n * @param {?} root\n * @param {?} el\n */\nconstructor(\nprivate root: ElContainer,\nprivate el: ElementRef,\n  ) {\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    console.log('Element Angular: Container Component is discarded, use [Container directive] replace it.')\n    this.root.setVertical(true)\n    removeNgTag(this.el.nativeElement)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-header',\n  template: `\n    <header [class]=\"'el-header ' + class\" [ngStyle]=\"{height: height}\">\n      <ng-content></ng-content>\n    </header>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElContainer, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'height': [{ type: Input },],\n'class': [{ type: Input },],\n};\n}\n\nfunction ElHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nElHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElHeader.ctorParameters;\n/** @type {?} */\nElHeader.propDecorators;\n/** @type {?} */\nElHeader.prototype.height;\n/** @type {?} */\nElHeader.prototype.class;\n/** @type {?} */\nElHeader.prototype.root;\n/** @type {?} */\nElHeader.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}