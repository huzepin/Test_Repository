{"version":3,"sources":["../../src/menu/menu-item-group.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,YAAA,EAAc,IAAA,EAAM,KAAA,EAA2B,MAAA,eAAA,CAAA;AACnE,OAAO,EAAE,YAAA,EAAwB,MAAA,2BAAA,CAAA;AACjC,OAAO,EAAE,MAAA,EAAO,MAAA,QAAA,CAAA;AAChB;IAIA;;;OAGG;IACH,yBAAY,QAAU,EACV,SAAW;QADX,aAAA,GAAA,QAAA,CAAU;QACV,cAAA,GAAA,SAAA,CAAW;QANpB,UAAK,GAEW,EAAA,CAAA;IAOjB,CAAC;IACH;;OAEG;IACH,sCAHG,GAGH;QACI,MAAM,CAHC,IAAA,CAAK,SAAC,CAAS,wBAAC,CAAwB,oBAAC,CAAoB,CAAA;IAItE,CAAC;IACH;;OAEG;IACH,kCALG,GAKH;QACI,EAAE,CAAC,CAAC,CALC,IAAC,CAAI,KAAC,CAAK,CAAC,CAAA;YAMf,OAAO,CALC,IAAC,CAAI,oDAAC,CAAoD,CAAA;QAMpE,CAAC;IACH,CAAC;IAJI,0BAAA,GAAoC;QAM3C,EALE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;oBAMvB,QAAQ,EALE,oBAAA;oBAMV,QAAQ,EALE,2kBAmBT;iBACF,EALC,EAAG;KAMJ,CALC;IAMF;;OAEG;IANF,8BAAA,GAAA,cAAA,OAAA;QAQD,EAAC,IAZC,EAAA,MAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA;QAaF,EAAC,IAAI,EAAE,YAAY,GAAG;KACrB,EAVA,CAUA,CAAC;IANK,8BAAA,GAAyD;QAQhE,UAAU,EAPE,CAAA,EAAG,IAAA,EAAM,YAAA,EAAc,IAAA,EAAM,CAAA,OAAE,EAAO,EAAG,EAAE;QAQvD,OAAO,EAPE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;KAQzB,CAPC;IAQF,sBAAC;CA1DD,AA0DC,IAAA;SAxDA,eAAA;AA0DD;IACA,gBAAgB;IAChB,eAAe,CAAC,UAAU,CAAC;IAC3B;;;OAGG;IACH,eAAe,CAAC,cAAc,CAAC;IAC/B,gBAAgB;IAChB,eAAe,CAAC,cAAc,CAAC;IAC/B,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;IACnC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC;IAChC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;IACnC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC;AACpC,CAAC","file":"menu-item-group.js","sourceRoot":"","sourcesContent":["import { Component, ContentChild, Host, Input, OnInit, TemplateRef } from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { ElMenu } from './menu';\nexport class ElMenuItemGroup implements OnInit {\n  \n   titleTmp: TemplateRef<any>\n   title: string = ''\n/**\n * @param {?} rootMenu\n * @param {?} sanitizer\n */\nconstructor(\npublic rootMenu: ElMenu,\nprivate sanitizer: DomSanitizer,\n  ) {\n  }\n/**\n * @return {?}\n */\npaddingStyle(): SafeStyle {\n    return this.sanitizer.bypassSecurityTrustStyle('padding-left: 20px')\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    if (!this.title) {\n      console.warn('el-menu-item-group required props: [title: string]')\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-menu-item-group',\n  template: `\n    <li class=\"el-menu-item-group\">\n      <div class=\"el-menu-item-group__title\" [style]=\"paddingStyle()\" #groupTitle\n        (mouseenter)=\"groupTitle.style.backgroundColor = rootMenu.hoverBackgroundColor() \"\n        (mouseleave)=\"groupTitle.style.backgroundColor = ''\">\n        <ng-container *ngIf=\"!titleTmp\">\n          {{title}}\n        </ng-container>\n        <ng-container *ngIf=\"titleTmp\">\n          <ng-template [ngTemplateOutlet]=\"titleTmp\"></ng-template>\n        </ng-container>\n      </div>\n      <ul><ng-content></ng-content></ul>\n    </li>\n  `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElMenu, decorators: [{ type: Host }, ]},\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'titleTmp': [{ type: ContentChild, args: ['title', ] },],\n'title': [{ type: Input },],\n};\n}\n\nfunction ElMenuItemGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nElMenuItemGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElMenuItemGroup.ctorParameters;\n/** @type {?} */\nElMenuItemGroup.propDecorators;\n/** @type {?} */\nElMenuItemGroup.prototype.titleTmp;\n/** @type {?} */\nElMenuItemGroup.prototype.title;\n/** @type {?} */\nElMenuItemGroup.prototype.rootMenu;\n/** @type {?} */\nElMenuItemGroup.prototype.sanitizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}