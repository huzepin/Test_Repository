{"version":3,"sources":["../../src/input/input.ts"],"names":[],"mappings":"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","file":"input.js","sourceRoot":"","sourcesContent":["import {\n  AfterViewInit, Component, ContentChild, ElementRef, forwardRef, OnInit, TemplateRef,\n  ViewChild,\n} from '@angular/core';\nimport { SafeStyle, DomSanitizer } from '@angular/platform-browser';\nimport { ElInputPoprs } from './input-props';\nimport { getTextareaHeight } from './help';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { isParentTag } from '../shared/utils/index';\nimport { ElFormItem } from '../form/form-item';\nexport class ElInput extends ElInputPoprs implements OnInit, AfterViewInit, ControlValueAccessor {\n  \n   prepend: TemplateRef<any>\n   append: TemplateRef<any>\n   textarea: any\n  textareaStyles: SafeStyle\n/**\n * @param {?} sanitizer\n * @param {?} el\n * @param {?} form\n */\nconstructor(\nprivate sanitizer: DomSanitizer,\nprivate el: ElementRef,\nprivate form: ElFormItem,\n  ) {\n    super()\n  }\n/**\n * @return {?}\n */\nmakeTextareaStyles(): void {\n    if (!this.autosize || this.type !== 'textarea') return\n    const /** @type {?} */ height: string = getTextareaHeight(this.textarea.nativeElement, this.autosize.minRows, this.autosize.maxRows)\n    const /** @type {?} */ styles: string = `resize: ${this.resize}; height: ${height};`\n    this.textareaStyles = this.sanitizer.bypassSecurityTrustStyle(styles)\n  }\n/**\n * @param {?} val\n * @return {?}\n */\nhandleInput(val: string): void {\n    this.model = val\n    this.modelChange.emit(val)\n    this.controlChange(val)\n    const /** @type {?} */ timer: any = setTimeout(() => {\n      this.makeTextareaStyles()\n      clearTimeout(timer)\n    }, 0)\n  }\n/**\n * @return {?}\n */\nshowPointer(): boolean {\n    const /** @type {?} */ clickEvent: boolean = !!(this.iconClick.observers && this.iconClick.observers.length)\n    const /** @type {?} */ mouseEvent: boolean = !!(this.iconMousedown.observers && this.iconMousedown.observers.length)\n    \n    return clickEvent || mouseEvent\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    // auto follow form status\n    const /** @type {?} */ parentIsForm: boolean = isParentTag(this.el.nativeElement, 'el-form-item')\n    if (parentIsForm) {\n      const /** @type {?} */ iconStatus = {\n        error: 'circle-close', success: 'circle-check', validating: 'circle-validating',\n      }\n      this.iconClass = 'el-input__validateIcon'\n      this.form.statusSubscriber.push((status: string) => {\n        this.icon = iconStatus[status] || ''\n      })\n    }\n    \n    if (this.value && !this.model) {\n      this.model = this.value\n    }\n  }\n/**\n * @return {?}\n */\nngAfterViewInit(): any {\n    // no content required\n    if (this.type === 'textarea') {\n      return setTimeout(() => {\n        this.makeTextareaStyles()\n      }, 0)\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.model = value\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: Function): void {\n    this.controlChange = fn\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: Function): void {\n    this.controlTouch = fn\n  }\nprivate controlChange: Function = () => {}\nprivate controlTouch: Function = () => {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-input',\n  styles: [`\n    .icon-disabled { cursor: not-allowed; } .icon-disabled:before { cursor: not-allowed; }\n    .icon-pointer { cursor: pointer; }`],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => ElInput),\n    multi: true\n  }],\n  template: `\n    <div [class]=\"(type === 'text' ? 'el-input' : 'el-textarea') +\n    (size ? ' el-input--' + size : '') + ' ' + parentClass\"\n      [class.is-disabled]=\"elDisabled\"\n      [class.el-input-group]=\"prepend || append\"\n      [class.el-input-group--append]=\"append\"\n      [class.el-input-group--prepend]=\"prepend\">\n      <ng-container *ngIf=\"type === 'text'\">\n        \n        <div class=\"el-input-group__prepend\" *ngIf=\"prepend\">\n          <ng-template [ngTemplateOutlet]=\"prepend\">\n          </ng-template>\n        </div>\n        \n        <span class=\"el-input__suffix\" *ngIf=\"icon\" (click)=\"iconClick.emit($event)\"\n          (mouseenter)=\"iconMouseEnter.emit($event)\" (mouseleave)=\"iconMouseLeave.emit($event)\"\n          (mousedown)=\"iconMousedown.emit($event)\" (mouseup)=\"iconMouseup.emit($event)\"\n          [class.icon-pointer]=\"showPointer()\"\n          [class.icon-disabled]=\"elDisabled\">\n          <span class=\"el-input__suffix-inner\">\n            <i [class]=\"'el-input__icon ' + ('el-icon-' + icon) + (iconClick ? ' is-clickable ' : ' ')\n              + (iconClass ? iconClass : '')\"\n              [attr.disabled]=\"elDisabled\"\n              [class.icon-disabled]=\"elDisabled\"\n              *ngIf=\"icon\"></i>\n          </span>\n        </span>\n        <input class=\"el-input__inner\"\n          [autocomplete]=\"autoComplete\" [value]=\"value\" [name]=\"name\" [type]=\"nativeType\"\n          [placeholder]=\"placeholder\" [autofocus]=\"autofocus\"\n          [disabled]=\"elDisabled\" [readonly]=\"readonly\"\n          [maxlength]=\"maxlength\" [minlength]=\"minlength\"\n          [ngModel]=\"model\" (ngModelChange)=\"handleInput($event)\"\n          (focus)=\"focus.emit($event)\" (blur)=\"blur.emit($event)\">\n        <i *ngIf=\"validating\" class=\"el-input__icon el-icon-loading\"></i>\n        \n        <div class=\"el-input-group__append\" *ngIf=\"append\">\n          <ng-template [ngTemplateOutlet]=\"append\">\n          </ng-template>\n        </div>\n      </ng-container>\n      \n      <ng-container *ngIf=\"type === 'textarea'\">\n        <textarea class=\"el-textarea__inner\" #textarea\n          [style]=\"textareaStyles\"\n          [value]=\"value\" [name]=\"name\"\n          [placeholder]=\"placeholder\" [autofocus]=\"autofocus\"\n          [disabled]=\"elDisabled\" [readonly]=\"readonly\"\n          [maxlength]=\"maxlength\" [minlength]=\"minlength\"\n          [ngModel]=\"model\" (input)=\"handleInput($event.target.value)\"\n          (focus)=\"focus.emit($event)\" (blur)=\"blur.emit($event)\"></textarea>\n      </ng-container>\n    </div>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DomSanitizer, },\n{type: ElementRef, },\n{type: ElFormItem, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'prepend': [{ type: ContentChild, args: ['prepend', ] },],\n'append': [{ type: ContentChild, args: ['append', ] },],\n'textarea': [{ type: ViewChild, args: ['textarea', ] },],\n};\n}\n\nfunction ElInput_tsickle_Closure_declarations() {\n/** @type {?} */\nElInput.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElInput.ctorParameters;\n/** @type {?} */\nElInput.propDecorators;\n/** @type {?} */\nElInput.prototype.prepend;\n/** @type {?} */\nElInput.prototype.append;\n/** @type {?} */\nElInput.prototype.textarea;\n/** @type {?} */\nElInput.prototype.textareaStyles;\n/** @type {?} */\nElInput.prototype.controlChange;\n/** @type {?} */\nElInput.prototype.controlTouch;\n/** @type {?} */\nElInput.prototype.sanitizer;\n/** @type {?} */\nElInput.prototype.el;\n/** @type {?} */\nElInput.prototype.form;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}