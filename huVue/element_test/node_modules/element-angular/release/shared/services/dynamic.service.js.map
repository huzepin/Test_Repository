{"version":3,"sources":["../../../src/shared/services/dynamic.service.ts"],"names":[],"mappings":";;;;;;;;;;AACA,OAAO,EACL,UAAU,EAAgB,wBAAA,EAA0B,QAAA,EAAU,cAAA,GAC/D,MAAM,eAAA,CAAA;AACP;IAEC,mCAAA;IAFD;;IASA,CAAC;IANM,0BAAA,GAAoC;QAD3C,EAEE,IAAA,EAAM,UAAA,EAAW;KADlB,CAEC;IADF;;OAEG;IACF,8BAAA,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;IACF,sBAAC;CATD,AASC,CAPA,QAAA,GAOA;SAPA,eAAA;AASD;IACA,gBAAgB;IAChB,eAAe,CAAC,UAAU,CAAC;IAC3B;;;OAGG;IACH,eAAe,CAAC,cAAc,CAAC;AAC/B,CAAC;AAED;IATC,iCAAA;IASD;;IASA,CAAC;IAjBM,wBAAA,GAAoC;QAU3C,EATE,IAAA,EAAM,UAAA,EAAW;KAUlB,CATC;IAUF;;OAEG;IAVF,4BAAA,GAAA,cAAA,OAAA,EAYA,EAZA,CAYA,CAAC;IACF,oBAAC;CATD,AASC,CAlBA,MAAA,GAkBA;SAlBA,aAAA;AAoBD;IACA,gBAAgB;IAChB,aAAa,CAAC,UAAU,CAAC;IACzB;;;OAGG;IACH,aAAa,CAAC,cAAc,CAAC;AAC7B,CAAC;AAED;IACA;;;;;OAKG;IACH,0BAxBY,QAAU,EACV,OAAS,EACT,QAAU,EACV,MAAQ;QAHR,aAAA,GAAA,QAAA,CAAU;QACV,YAAA,GAAA,OAAA,CAAS;QACT,aAAA,GAAA,QAAA,CAAU;QACV,WAAA,GAAA,MAAA,CAAQ;IA2BlB,CAAC;IACH;;;OAGG;IACH,oCA5BG,GA4BH,UA5BG,SAAA;QA6BC,IAAM,gBAAgB,CA5BhB,EAAA,GAAK,IAAA,CAAK,MAAC,EAAM,CAAA;QA6BvB,IAAM,gBAAgB,CA5BhB,SAAA,GAA+B,IAAA,CAAK,OAAC;aA6BxC,uBA5BC,CAAuB,SAAC,CAAS;aA6BlC,MA5BC,CAAM,IAAC,CAAI,QAAC,CAAQ,CAAA;QA6BxB,IAAI,CA5BC,MAAC,CAAM,UAAC,CAAU,SAAC,CAAS,QAAC,CAAQ,CAAA;QA8B1C,IAAM,gBAAgB,CA5BhB,WAAA,GAA2B,IAAA,CAAK,QAAC,CAAQ,aAAC,CAAa,KAAC,CAAK,CAAA;QA6BnE,WAAW,CA5BC,YAAC,CAAY,IAAC,EAAK,EAAA,CAAG,CAAA;QA6BlC,SAAS,CA5BC,QAAC,CAAQ,EAAC,GAAI,EAAA,CAAA;QA6BxB,WAAW,CA5BC,WAAC,CAAW,CAAC,CAAK,SAAC,CAAS,QAAC,CAAA,CAAQ,CAAC,SAAC,CAAS,CAAC,CAAC,CAAC,CAAA;QA6B/D,IAAI,CA5BC,QAAC,CAAQ,IAAC,CAAI,WAAC,CAAW,WAAC,CAAW,CAAA;QA8B3C,MAAM,CA5BC,SAAA,CAAA;IA6BT,CAAC;IACH;;;OAGG;IACH,kCA/BG,GA+BH,UA/BG,GAAA;QA+BH,iBAKG;QAJC,IAAM,gBAAgB,CA/BhB,KAAA,GAAQ,UAAA,CAAW;YAgCvB,KAAI,CA/BC,WAAC,CAAW,GAAC,CAAG,CAAA;YAgCrB,YAAY,CA/BC,KAAC,CAAK,CAAA;QAgCrB,CAAC,EA/BE,GAAA,CAAI,CAAA;IAgCT,CAAC;IACH;;;OAGG;IACH,sCAlCG,GAkCH,UAlCG,GAAA;QAmCC,IAAM,gBAAgB,CAlChB,EAAA,GAAK,GAAA,CAAI,QAAC,CAAQ,EAAC,CAAA;QAmCzB,IAAI,CAlCC,MAAC,CAAM,UAAC,CAAU,GAAC,CAAG,QAAC,CAAQ,CAAA;QAmCpC,GAAG,CAlCC,OAAC,EAAO,CAAA;QAmCZ,IAlCI,CAAA;YAmCF,IAAM,gBAAgB,CAlChB,WAAA,GAAc,IAAA,CAAK,QAAC,CAAQ,cAAC,CAAc,EAAC,CAAE,CAAA;YAmCpD,WAAW,IAlCI,WAAA,CAAY,aAAC,CAAa,WAAC,CAAW,WAAC,CAAW,CAAA;QAmCnE,CAAC;QAlCC,KAAA,CAAA,CAAA,GAAQ,CAAG,CAAC,CAAA,CAAA,CAAA;IAmChB,CAAC;IACH;;OAEG;IACH,iCApCG,GAoCH;QACI,MAAM,CApCC,IAAA,CAAK,MAAC,EAAM,CAAE,QAAC,CAAQ,EAAC,CAAE,CAAC,MAAC,CAAM,CAAC,EAAE,CAAA,CAAE,CAAA;IAqChD,CAAC;IAlCI,2BAAA,GAAoC;QAqC3C,EApCE,IAAA,EAAM,UAAA,EAAW;KAqClB,CApCC;IAqCF;;OAEG;IArCF,+BAAA,GAAA,cAAA,OAAA;QAuCD,EAAC,IAAI,EAAE,eAAe,GAAG;QACzB,EAAC,IAAI,EAAE,wBAAwB,GAAG;QAClC,EAAC,IAAI,EAAE,QAAQ,GAAG;QAClB,EAAC,IAAI,EAAE,cAAc,GAAG;KACvB,EA3CA,CA2CA,CAAC;IACF,uBAAC;CA3ED,AA2EC,IAAA;SA/FA,gBAAA;AAiGD;IACA,gBAAgB;IAChB,gBAAgB,CAAC,UAAU,CAAC;IAC5B;;;OAGG;IACH,gBAAgB,CAAC,cAAc,CAAC;IAChC,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACpC,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,OAAO,CAAC;IACnC,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC;IACpC,gBAAgB;IAChB,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC;AAClC,CAAC","file":"dynamic.service.js","sourceRoot":"","sourcesContent":["\nimport {\n  Injectable, ComponentRef, ComponentFactoryResolver, Injector, ApplicationRef,\n} from '@angular/core';\nexport class DocumentWrapper extends Document {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DocumentWrapper_tsickle_Closure_declarations() {\n/** @type {?} */\nDocumentWrapper.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDocumentWrapper.ctorParameters;\n}\n\nexport class WindowWrapper extends Window {\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WindowWrapper_tsickle_Closure_declarations() {\n/** @type {?} */\nWindowWrapper.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWindowWrapper.ctorParameters;\n}\n\nexport class ExDynamicService {\n/**\n * @param {?} document\n * @param {?} factory\n * @param {?} injector\n * @param {?} appRef\n */\nconstructor(\nprivate document: DocumentWrapper,\nprivate factory: ComponentFactoryResolver,\nprivate injector: Injector,\nprivate appRef: ApplicationRef,\n  ) {\n  }\n/**\n * @param {?} Container\n * @return {?}\n */\ngenerator(Container: any): ComponentRef<any> {\n    const /** @type {?} */ id = this.makeID()\n    const /** @type {?} */ component: ComponentRef<any> = this.factory\n      .resolveComponentFactory(Container)\n      .create(this.injector)\n    this.appRef.attachView(component.hostView)\n  \n    const /** @type {?} */ hostElement: HTMLElement = this.document.createElement('div')\n    hostElement.setAttribute('id', id)\n    component.instance.id = id\n    hostElement.appendChild(( /** @type {?} */((<any>component.hostView))).rootNodes[0])\n    this.document.body.appendChild(hostElement)\n    \n    return component\n  }\n/**\n * @param {?} com\n * @return {?}\n */\ndestroy(com: ComponentRef<any>): void {\n    const /** @type {?} */ timer = setTimeout(() => {\n      this.destroyWait(com)\n      clearTimeout(timer)\n    }, 500)\n  }\n/**\n * @param {?} com\n * @return {?}\n */\ndestroyWait(com: ComponentRef<any>): void {\n    const /** @type {?} */ id = com.instance.id\n    this.appRef.detachView(com.hostView)\n    com.destroy()\n    try {\n      const /** @type {?} */ hostElement = this.document.getElementById(id)\n      hostElement && hostElement.parentElement.removeChild(hostElement)\n    } catch ( /** @type {?} */err) {}\n  }\n/**\n * @return {?}\n */\nmakeID(): string {\n    return Math.random().toString(16).substr(2, 8)\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DocumentWrapper, },\n{type: ComponentFactoryResolver, },\n{type: Injector, },\n{type: ApplicationRef, },\n];\n}\n\nfunction ExDynamicService_tsickle_Closure_declarations() {\n/** @type {?} */\nExDynamicService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nExDynamicService.ctorParameters;\n/** @type {?} */\nExDynamicService.prototype.document;\n/** @type {?} */\nExDynamicService.prototype.factory;\n/** @type {?} */\nExDynamicService.prototype.injector;\n/** @type {?} */\nExDynamicService.prototype.appRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}