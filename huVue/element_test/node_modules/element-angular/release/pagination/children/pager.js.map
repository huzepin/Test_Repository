{"version":3,"sources":["../../../src/pagination/children/pager.ts"],"names":[],"mappings":"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","file":"pager.js","sourceRoot":"","sourcesContent":["import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nexport class ElPaginationPager implements OnInit, OnChanges {\n  \n   current: number = 1\n   count: number\n   next: EventEmitter<number> = new EventEmitter<number>()\n  \n  pagers: number[]\n  showPrevMore: boolean = false\n  showNextMore: boolean = false\n  quicknextIconClass: string = 'el-icon-more'\n  quickprevIconClass: string = 'el-icon-more'\n/**\n * @param {?} minValue\n * @return {?}\n */\nstatic pagerGenerator(minValue: number): number[] {\n    const /** @type {?} */ target: number[] = new Array(5).fill('').map((v, i) => i + minValue)\n    return target\n  }\n/**\n * Always show 5 numbers, excluding head and foot\n * like: 1 ... < 5, 6, 7, 8, 9 > ... 100\n * \n * jump page button is [showPrevMore] and [showNextMore]\n * \n * @param {?} current\n * @param {?} count\n * @return {?} number[], like: [2, 3, 4, 5, 6]\n * \n */\nmakePagers(current: number, count: number): number[] {\n    const /** @type {?} */ pagerCount: number = 7\n    if (count < pagerCount) {\n      this.setMoreBtn(false, false)\n      const /** @type {?} */ target: number[] = ElPaginationPager.pagerGenerator(2)\n      target.length = count - 2 >= 0 ? count - 2 : 0\n      return target\n    }\n    \n    const /** @type {?} */ max: number = current + 2\n    const /** @type {?} */ min: number = current - 2\n    if (max >= count) {\n      this.setMoreBtn(true, false)\n      return ElPaginationPager.pagerGenerator(count - 5)\n    }\n    if (min <= 2) {\n      this.setMoreBtn(false, true)\n      return ElPaginationPager.pagerGenerator(2)\n    }\n    this.setMoreBtn(true, true)\n    return ElPaginationPager.pagerGenerator(min)\n  }\n/**\n * @param {?} prev\n * @param {?} next\n * @return {?}\n */\nsetMoreBtn(prev: boolean, next: boolean): void {\n    this.showPrevMore = prev\n    this.showNextMore = next\n  }\n/**\n * @param {?} to\n * @return {?}\n */\nclickHandle(to: number): void {\n    const /** @type {?} */ step: number = to - this.current\n    this.next.emit(step)\n  }\n/**\n * @param {?} step\n * @return {?}\n */\njumpHandle(step: number): void {\n    this.next.emit(step)\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.pagers = this.makePagers(this.current, this.count)\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    if (!changes) return\n    this.pagers = this.makePagers(this.current, this.count)\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-pagination-pager',\n  template: `\n    <ul class=\"el-pager\">\n      <li class=\"number\" [class.active]=\"current === 1\"\n        (click)=\"clickHandle(1)\"\n        *ngIf=\"count > 0\">1</li>\n      <li *ngIf=\"showPrevMore\"\n        [class]=\"'el-icon more btn-quickprev ' + quickprevIconClass\"\n        (click)=\"jumpHandle(-5)\"\n        (mouseenter)=\"quickprevIconClass = 'el-icon-d-arrow-left'\"\n        (mouseleave)=\"quickprevIconClass = 'el-icon-more'\"></li>\n      <li class=\"number\"\n        *ngFor=\"let pager of pagers\"\n        (click)=\"clickHandle(pager)\"\n        [class.active]=\"current === pager\">{{ pager }}</li>\n      <li [class]=\"'el-icon more btn-quicknext ' + quicknextIconClass\"\n        *ngIf=\"showNextMore\"\n        (click)=\"jumpHandle(5)\"\n        (mouseenter)=\"quicknextIconClass = 'el-icon-d-arrow-right'\"\n        (mouseleave)=\"quicknextIconClass = 'el-icon-more'\"></li>\n      <li class=\"number\"\n        [class.active]=\"current === count\"\n        (click)=\"clickHandle(count)\"\n        *ngIf=\"count > 1\">{{ count }}</li>\n    </ul>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'current': [{ type: Input },],\n'count': [{ type: Input },],\n'next': [{ type: Output },],\n};\n}\n\nfunction ElPaginationPager_tsickle_Closure_declarations() {\n/** @type {?} */\nElPaginationPager.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElPaginationPager.ctorParameters;\n/** @type {?} */\nElPaginationPager.propDecorators;\n/** @type {?} */\nElPaginationPager.prototype.current;\n/** @type {?} */\nElPaginationPager.prototype.count;\n/** @type {?} */\nElPaginationPager.prototype.next;\n/** @type {?} */\nElPaginationPager.prototype.pagers;\n/** @type {?} */\nElPaginationPager.prototype.showPrevMore;\n/** @type {?} */\nElPaginationPager.prototype.showNextMore;\n/** @type {?} */\nElPaginationPager.prototype.quicknextIconClass;\n/** @type {?} */\nElPaginationPager.prototype.quickprevIconClass;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}