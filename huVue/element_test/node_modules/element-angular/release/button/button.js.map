{"version":3,"sources":["../../src/button/button.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAAE,KAAA,EAAO,MAAA,EAAQ,YAAA,EAAsB,uBAAA,EAChD,UAAU,GACX,MAAM,eAAA,CAAgB;AACvB,OAAO,EAAE,WAAA,EAAY,MAAA,uBAAA,CAAA;AACrB,OAAO,EAAa,YAAA,EAAa,MAAA,2BAAA,CAAA;AACjC;IAoBA;;;OAGG;IACH,kBAHY,EAAI,EACJ,SAAW;QADX,OAAA,GAAA,EAAA,CAAI;QACJ,cAAA,GAAA,SAAA,CAAW;QAdpB,eAAU,GADY,KAAA,CAAA;QAEtB,cAAS,GADW,EAAA,CAAA;QAEpB,eAAU,GADW,QAAA,CAAA;QAErB,SAAI,GADW,EAAA,CAAA;QAEf,SAAI,GADW,EAAA,CAAA;QAEf,YAAO,GADY,KAAA,CAAA;QAEnB,UAAK,GADY,KAAA,CAAA;QAEjB,UAAK,GADY,KAAA,CAAA;QAEjB,cAAS,GADY,KAAA,CAAA;QAErB,UAAK,GADW,EAAA,CAAA;QAEhB,gBAAW,GADW,EAAA,CAAA;QAEtB,UAAK,GADsB,IAAI,YAAA,EAAiB,CAAA;IAUjD,CAAC;IAvBH,sBADI,8BAAA;QAHJ;;;WAGG;aACH,UADI,GAAA;YAEA,OAAO,CADC,IAAC,CAAI,wEAAC,CAAwE,CAAA;QAExF,CAAC;;;OAAA;IAsBH;;;OAGG;IACH,8BAPG,GAOH,UAPG,MAAA;QAQC,IAAI,CAPC,KAAC,CAAK,IAAC,CAAI,MAAC,CAAM,CAAA;IAQzB,CAAC;IACH;;OAEG;IACH,+BATG,GASH;QACI,MAAM,CATC,IAAA,CAAK,SAAC,CAAS,wBAAC,CAAwB,IAAC,CAAI,KAAC,CAAK,CAAA;IAU5D,CAAC;IACH;;OAEG;IACH,2BAXG,GAWH;QACI,WAAW,CAXC,IAAC,CAAI,EAAC,CAAE,aAAC,CAAa,CAAA;IAYpC,CAAC;IATI,mBAAA,GAAoC;QAY3C,EAXE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;oBAYvB,QAAQ,EAXE,WAAA;oBAYV,eAAe,EAXE,uBAAA,CAAwB,MAAC;oBAY1C,QAAQ,EAXE,inBA2BT;iBACF,EAXC,EAAG;KAYJ,CAXC;IAYF;;OAEG;IAZF,uBAAA,GAAA,cAAA,OAAA;QAcD,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,YAAY,GAAG;KACrB,EAhBA,CAgBA,CAAC;IAZK,uBAAA,GAAyD;QAchE,UAAU,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAc7B,YAvBE,EAUY,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAc/B,WAAW,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,MAAE,EAAM,EAAG,EAAE;QAchD,YAAY,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,aAAE,EAAa,EAAG,EAAE;QAcxD,MAAM,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAczB,MAAM,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAczB,SAAS,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAc5B,OAAO,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAc1B,OAAO,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAc1B,WAAW,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAc9B,OAAO,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;QAc1B,aAAa,EAbE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAO,IAAA,EAAM,CAAA,OAAE,EAAO,EAAG,EAAE;QAcnD,OAAO,EAbE,CAAA,EAAG,IAAA,EAAM,MAAA,EAAO,EAAE;KAc1B,CAbC;IAcF,eAAC;CA9FD,AA8FC,IAAA;SA5FA,QAAA;AA8FD;IACA,gBAAgB;IAChB,QAAQ,CAAC,UAAU,CAAC;IACpB;;;OAGG;IACH,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,cAAc,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC;IAC9B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC;IAC7B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC;IAC9B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;IACxB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC;IAC3B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;IACzB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;IACzB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC;IAC7B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;IACzB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,WAAW,CAAC;IAC/B,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;IACzB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC;IACtB,gBAAgB;IAChB,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC;AAC7B,CAAC","file":"button.js","sourceRoot":"","sourcesContent":["import {\n  Component, Input, Output, EventEmitter, OnInit, ChangeDetectionStrategy,\n  ElementRef,\n} from '@angular/core';\nimport { removeNgTag } from '../shared/utils/index';\nimport { SafeStyle, DomSanitizer } from '@angular/platform-browser';\nexport class ElButton implements OnInit {\n/**\n * @param {?} val\n * @return {?}\n */\nset disabled(val: boolean) {   // todo, is discarded.\n    console.warn('Element Angular: (disabled) is discarded, use [elDisabled] replace it.')\n  }\n   elDisabled: boolean = false\n   themeType: string = ''\n   nativeType: string = 'button'\n   size: string = ''\n   icon: string = ''\n   loading: boolean = false\n   plain: boolean = false\n   round: boolean = false\n   autofocus: boolean = false\n   style: string = ''\n   nativeClass: string = ''\n   click: EventEmitter<any> = new EventEmitter<any>()\n/**\n * @param {?} el\n * @param {?} sanitizer\n */\nconstructor(\nprivate el: ElementRef,\nprivate sanitizer: DomSanitizer,\n  ) {\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\nclickHandle($event: Event): void {\n    this.click.emit($event)\n  }\n/**\n * @return {?}\n */\nextendStyles(): SafeStyle {\n    return this.sanitizer.bypassSecurityTrustStyle(this.style)\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    removeNgTag(this.el.nativeElement)\n  }\n  \nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'el-button',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n  <button (click)=\"clickHandle($event)\"\n    [class]=\"'el-button ' + (themeType ? ' el-button--' + themeType : '')\n      + (size ? ' el-button--' + size : '') + ' ' + nativeClass\"\n    [class.is-disabled]=\"elDisabled\"\n    [class.is-loading]=\"loading\"\n    [class.is-plain]=\"plain\"\n    [class.is-round]=\"round\"\n    [disabled]=\"elDisabled\"\n    [type]=\"nativeType\"\n    [style]=\"extendStyles()\"\n    [autofocus]=\"autofocus\">\n    <i class=\"el-icon-loading\" *ngIf=\"loading\"></i>\n    <i [class]=\"'el-icon-' + icon\" *ngIf=\"icon && !loading\"></i>\n    <ng-content></ng-content>\n  </button>\n  `,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: DomSanitizer, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'elDisabled': [{ type: Input },],\n'themeType': [{ type: Input, args: ['type', ] },],\n'nativeType': [{ type: Input, args: ['native-type', ] },],\n'size': [{ type: Input },],\n'icon': [{ type: Input },],\n'loading': [{ type: Input },],\n'plain': [{ type: Input },],\n'round': [{ type: Input },],\n'autofocus': [{ type: Input },],\n'style': [{ type: Input },],\n'nativeClass': [{ type: Input, args: ['class', ] },],\n'click': [{ type: Output },],\n};\n}\n\nfunction ElButton_tsickle_Closure_declarations() {\n/** @type {?} */\nElButton.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nElButton.ctorParameters;\n/** @type {?} */\nElButton.propDecorators;\n/** @type {?} */\nElButton.prototype.elDisabled;\n/** @type {?} */\nElButton.prototype.themeType;\n/** @type {?} */\nElButton.prototype.nativeType;\n/** @type {?} */\nElButton.prototype.size;\n/** @type {?} */\nElButton.prototype.icon;\n/** @type {?} */\nElButton.prototype.loading;\n/** @type {?} */\nElButton.prototype.plain;\n/** @type {?} */\nElButton.prototype.round;\n/** @type {?} */\nElButton.prototype.autofocus;\n/** @type {?} */\nElButton.prototype.style;\n/** @type {?} */\nElButton.prototype.nativeClass;\n/** @type {?} */\nElButton.prototype.click;\n/** @type {?} */\nElButton.prototype.el;\n/** @type {?} */\nElButton.prototype.sanitizer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}